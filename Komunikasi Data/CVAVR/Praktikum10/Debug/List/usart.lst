
AVRASM ver. 2.1.30  E:\CVAVR\Praktikum10\Debug\List\usart.asm Mon Jun 16 16:41:48 2025

E:\CVAVR\Praktikum10\Debug\List\usart.asm(1083): warning: Register r5 already defined by the .DEF directive
E:\CVAVR\Praktikum10\Debug\List\usart.asm(1084): warning: Register r4 already defined by the .DEF directive
E:\CVAVR\Praktikum10\Debug\List\usart.asm(1085): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 12,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 694b
000034 6972
000035 206d
000036 6164      	.DB  0x4B,0x69,0x72,0x69,0x6D,0x20,0x64,0x61
000037 6174
000038 6b20
000039 2065
00003a 5355      	.DB  0x74,0x61,0x20,0x6B,0x65,0x20,0x55,0x53
00003b 5241
00003c 2054
00003d 000d
00003e 6554      	.DB  0x41,0x52,0x54,0x20,0xD,0x0,0x54,0x65
00003f 616b
000040 206e
000041 6f74
000042 626d      	.DB  0x6B,0x61,0x6E,0x20,0x74,0x6F,0x6D,0x62
000043 6c6f
000044 7520
000045 746e
000046 6b75      	.DB  0x6F,0x6C,0x20,0x75,0x6E,0x74,0x75,0x6B
000047 6d20
000048 6e65
000049 6967
00004a 6972      	.DB  0x20,0x6D,0x65,0x6E,0x67,0x69,0x72,0x69
00004b 206d
00004c 6164
00004d 6174
00004e 0d20      	.DB  0x6D,0x20,0x64,0x61,0x74,0x61,0x20,0xD
00004f 5400
000050 6d6f
000051 6f62
000052 206c      	.DB  0x0,0x54,0x6F,0x6D,0x62,0x6F,0x6C,0x20
000053 6964
000054 6574
000055 616b
000056 206e      	.DB  0x64,0x69,0x74,0x65,0x6B,0x61,0x6E,0x20
000057 7525
000058 6b20
000059 6c61
00005a 2069      	.DB  0x25,0x75,0x20,0x6B,0x61,0x6C,0x69,0x20
00005b 000d
00005c 6f54
00005d 626d
00005e 6c6f      	.DB  0xD,0x0,0x54,0x6F,0x6D,0x62,0x6F,0x6C
00005f 6420
000060 7469
000061 6b65
000062 6e61      	.DB  0x20,0x64,0x69,0x74,0x65,0x6B,0x61,0x6E
000063 2500
000064 2069
000065 616b
000066 696c      	.DB  0x0,0x25,0x69,0x20,0x6B,0x61,0x6C,0x69
E:\CVAVR\Praktikum10\Debug\List\usart.asm(1136): warning: .cseg .db misalignment - padding zero byte
000067 0000      	.DB  0x0
                 _0x2000003:
000068 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000069 0002      	.DW  0x02
00006a 0260      	.DW  __base_y_G100
00006b 00d0      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00006c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00006d 94f8      	CLI
00006e 27ee      	CLR  R30
00006f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000070 e0f1      	LDI  R31,1
000071 bffb      	OUT  GICR,R31
000072 bfeb      	OUT  GICR,R30
000073 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000074 e08d      	LDI  R24,(14-2)+1
000075 e0a2      	LDI  R26,2
000076 27bb      	CLR  R27
                 __CLEAR_REG:
000077 93ed      	ST   X+,R30
000078 958a      	DEC  R24
000079 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00007b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00007c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00007d 93ed      	ST   X+,R30
00007e 9701      	SBIW R24,1
00007f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000080 ede2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000081 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000082 9185      	LPM  R24,Z+
000083 9195      	LPM  R25,Z+
000084 9700      	SBIW R24,0
000085 f061      	BREQ __GLOBAL_INI_END
000086 91a5      	LPM  R26,Z+
000087 91b5      	LPM  R27,Z+
000088 9005      	LPM  R0,Z+
000089 9015      	LPM  R1,Z+
00008a 01bf      	MOVW R22,R30
00008b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00008c 9005      	LPM  R0,Z+
00008d 920d      	ST   X+,R0
00008e 9701      	SBIW R24,1
00008f f7e1      	BRNE __GLOBAL_INI_LOOP
000090 01fb      	MOVW R30,R22
000091 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000092 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000093 bfed      	OUT  SPL,R30
000094 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000095 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000096 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000097 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000098 940c 009a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void main(void)
                 ; 0000 0022 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0023 char pencet = 0;
                 ; 0000 0024 char buff[32];
                 ; 0000 0025 // Declare your local variables here
                 ; 0000 0026 
                 ; 0000 0027 // Input/Output Ports initialization
                 ; 0000 0028 // Port A initialization
                 ; 0000 0029 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002A DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0< ...
00009a 97a0      	SBIW R28,32
                 ;	pencet -> R17
                 ;	buff -> Y+0
00009b e010      	LDI  R17,0
00009c e0e0      	LDI  R30,LOW(0)
00009d bbea      	OUT  0x1A,R30
                 ; 0000 002B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002C PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<< ...
00009e bbeb      	OUT  0x1B,R30
                 ; 0000 002D 
                 ; 0000 002E // Port B initialization
                 ; 0000 002F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0030 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0< ...
00009f bbe7      	OUT  0x17,R30
                 ; 0000 0031 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0032 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<< ...
0000a0 bbe8      	OUT  0x18,R30
                 ; 0000 0033 
                 ; 0000 0034 // Port C initialization
                 ; 0000 0035 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0036 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0< ...
0000a1 bbe4      	OUT  0x14,R30
                 ; 0000 0037 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0038 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<< ...
0000a2 bbe5      	OUT  0x15,R30
                 ; 0000 0039 
                 ; 0000 003A // Port D initialization
                 ; 0000 003B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003C DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0< ...
0000a3 bbe1      	OUT  0x11,R30
                 ; 0000 003D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 003E PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<< ...
0000a4 bbe2      	OUT  0x12,R30
                 ; 0000 003F 
                 ; 0000 0040 // Timer/Counter 0 initialization
                 ; 0000 0041 // Clock source: System Clock
                 ; 0000 0042 // Clock value: Timer 0 Stopped
                 ; 0000 0043 // Mode: Normal top=0xFF
                 ; 0000 0044 // OC0 output: Disconnected
                 ; 0000 0045 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01)  ...
0000a5 bfe3      	OUT  0x33,R30
                 ; 0000 0046 TCNT0=0x00;
0000a6 bfe2      	OUT  0x32,R30
                 ; 0000 0047 OCR0=0x00;
0000a7 bfec      	OUT  0x3C,R30
                 ; 0000 0048 
                 ; 0000 0049 // Timer/Counter 1 initialization
                 ; 0000 004A // Clock source: System Clock
                 ; 0000 004B // Clock value: Timer1 Stopped
                 ; 0000 004C // Mode: Normal top=0xFFFF
                 ; 0000 004D // OC1A output: Disconnected
                 ; 0000 004E // OC1B output: Disconnected
                 ; 0000 004F // Noise Canceler: Off
                 ; 0000 0050 // Input Capture on Falling Edge
                 ; 0000 0051 // Timer1 Overflow Interrupt: Off
                 ; 0000 0052 // Input Capture Interrupt: Off
                 ; 0000 0053 // Compare A Match Interrupt: Off
                 ; 0000 0054 // Compare B Match Interrupt: Off
                 ; 0000 0055 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<< ...
0000a8 bdef      	OUT  0x2F,R30
                 ; 0000 0056 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) ...
0000a9 bdee      	OUT  0x2E,R30
                 ; 0000 0057 TCNT1H=0x00;
0000aa bded      	OUT  0x2D,R30
                 ; 0000 0058 TCNT1L=0x00;
0000ab bdec      	OUT  0x2C,R30
                 ; 0000 0059 ICR1H=0x00;
0000ac bde7      	OUT  0x27,R30
                 ; 0000 005A ICR1L=0x00;
0000ad bde6      	OUT  0x26,R30
                 ; 0000 005B OCR1AH=0x00;
0000ae bdeb      	OUT  0x2B,R30
                 ; 0000 005C OCR1AL=0x00;
0000af bdea      	OUT  0x2A,R30
                 ; 0000 005D OCR1BH=0x00;
0000b0 bde9      	OUT  0x29,R30
                 ; 0000 005E OCR1BL=0x00;
0000b1 bde8      	OUT  0x28,R30
                 ; 0000 005F 
                 ; 0000 0060 // Timer/Counter 2 initialization
                 ; 0000 0061 // Clock source: System Clock
                 ; 0000 0062 // Clock value: Timer2 Stopped
                 ; 0000 0063 // Mode: Normal top=0xFF
                 ; 0000 0064 // OC2 output: Disconnected
                 ; 0000 0065 ASSR=0<<AS2;
0000b2 bde2      	OUT  0x22,R30
                 ; 0000 0066 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) |  ...
0000b3 bde5      	OUT  0x25,R30
                 ; 0000 0067 TCNT2=0x00;
0000b4 bde4      	OUT  0x24,R30
                 ; 0000 0068 OCR2=0x00;
0000b5 bde3      	OUT  0x23,R30
                 ; 0000 0069 
                 ; 0000 006A // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 006B TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TO ...
0000b6 bfe9      	OUT  0x39,R30
                 ; 0000 006C 
                 ; 0000 006D // External Interrupt(s) initialization
                 ; 0000 006E // INT0: Off
                 ; 0000 006F // INT1: Off
                 ; 0000 0070 // INT2: Off
                 ; 0000 0071 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000b7 bfe5      	OUT  0x35,R30
                 ; 0000 0072 MCUCSR=(0<<ISC2);
0000b8 bfe4      	OUT  0x34,R30
                 ; 0000 0073 
                 ; 0000 0074 // USART initialization
                 ; 0000 0075 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0076 // USART Receiver: On
                 ; 0000 0077 // USART Transmitter: On
                 ; 0000 0078 // USART Mode: Asynchronous
                 ; 0000 0079 // USART Baud Rate: 9600
                 ; 0000 007A UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) ...
0000b9 b9eb      	OUT  0xB,R30
                 ; 0000 007B UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2)  ...
0000ba e1e8      	LDI  R30,LOW(24)
0000bb b9ea      	OUT  0xA,R30
                 ; 0000 007C UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | ...
0000bc e8e6      	LDI  R30,LOW(134)
0000bd bde0      	OUT  0x20,R30
                 ; 0000 007D UBRRH=0x00;
0000be e0e0      	LDI  R30,LOW(0)
0000bf bde0      	OUT  0x20,R30
                 ; 0000 007E UBRRL=0x4D;
0000c0 e4ed      	LDI  R30,LOW(77)
0000c1 b9e9      	OUT  0x9,R30
                 ; 0000 007F 
                 ; 0000 0080 // Analog Comparator initialization
                 ; 0000 0081 // Analog Comparator: Off
                 ; 0000 0082 // The Analog Comparator's positive input is
                 ; 0000 0083 // connected to the AIN0 pin
                 ; 0000 0084 // The Analog Comparator's negative input is
                 ; 0000 0085 // connected to the AIN1 pin
                 ; 0000 0086 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<AC ...
0000c2 e8e0      	LDI  R30,LOW(128)
0000c3 b9e8      	OUT  0x8,R30
                 ; 0000 0087 SFIOR=(0<<ACME);
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 bfe0      	OUT  0x30,R30
                 ; 0000 0088 
                 ; 0000 0089 // ADC initialization
                 ; 0000 008A // ADC disabled
                 ; 0000 008B ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | ...
0000c6 b9e6      	OUT  0x6,R30
                 ; 0000 008C 
                 ; 0000 008D // SPI initialization
                 ; 0000 008E // SPI disabled
                 ; 0000 008F SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<< ...
0000c7 b9ed      	OUT  0xD,R30
                 ; 0000 0090 
                 ; 0000 0091 // TWI initialization
                 ; 0000 0092 // TWI disabled
                 ; 0000 0093 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000c8 bfe6      	OUT  0x36,R30
                 ; 0000 0094 
                 ; 0000 0095 // Alphanumeric LCD initialization
                 ; 0000 0096 // Connections are specified in the
                 ; 0000 0097 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0098 // RS - PORTC Bit 0
                 ; 0000 0099 // RD - PORTC Bit 1
                 ; 0000 009A // EN - PORTC Bit 2
                 ; 0000 009B // D4 - PORTC Bit 4
                 ; 0000 009C // D5 - PORTC Bit 5
                 ; 0000 009D // D6 - PORTC Bit 6
                 ; 0000 009E // D7 - PORTC Bit 7
                 ; 0000 009F // Characters/line: 16
                 ; 0000 00A0 
                 ; 0000 00A1 
                 ; 0000 00A2 lcd_init(16);
0000c9 e1a0      	LDI  R26,LOW(16)
0000ca d09f      	RCALL _lcd_init
                 ; 0000 00A3 printf("Kirim data ke USART \r");
                +
0000cb e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000cc e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000cd 940e 0383 	CALL SUBOPT_0x0
                 ; 0000 00A4 printf("Tekan tombol untuk mengirim data \r");
                +
0000cf e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
0000d0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
0000d1 940e 0383 	CALL SUBOPT_0x0
                 ; 0000 00A5 while (1)
                 _0x3:
                 ; 0000 00A6 {
                 ; 0000 00A7 if(PINA.0==1){
0000d3 9bc8      	SBIS 0x19,0
0000d4 c021      	RJMP _0x6
                 ; 0000 00A8 while(PINA.0==1){}
                 _0x7:
0000d5 99c8      	SBIC 0x19,0
0000d6 cffe      	RJMP _0x7
                 ; 0000 00A9 pencet++;
0000d7 5f1f      	SUBI R17,-1
                 ; 0000 00AA printf("Tombol ditekan %u kali \r", pencet);
                +
0000d8 e9ef     +LDI R30 , LOW ( 2 * _0x0 + ( 57 ) )
0000d9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 57 ) )
                 	__POINTW1FN _0x0,57
0000da 940e 038a 	CALL SUBOPT_0x1
0000dc 940e 034b 	CALL _printf
0000de 9626      	ADIW R28,6
                 ; 0000 00AB lcd_gotoxy(0,0);
0000df e0e0      	LDI  R30,LOW(0)
0000e0 93ea      	ST   -Y,R30
0000e1 e0a0      	LDI  R26,LOW(0)
0000e2 d036      	RCALL _lcd_gotoxy
                 ; 0000 00AC lcd_putsf("Tombol ditekan");
                +
0000e3 eba8     +LDI R26 , LOW ( 2 * _0x0 + ( 82 ) )
0000e4 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 82 ) )
                 	__POINTW2FN _0x0,82
0000e5 d073      	RCALL _lcd_putsf
                 ; 0000 00AD lcd_gotoxy(0,1);
0000e6 e0e0      	LDI  R30,LOW(0)
0000e7 93ea      	ST   -Y,R30
0000e8 e0a1      	LDI  R26,LOW(1)
0000e9 d02f      	RCALL _lcd_gotoxy
                 ; 0000 00AE sprintf(buff, "%i kali", pencet);
0000ea 01fe      	MOVW R30,R28
0000eb 93fa      	ST   -Y,R31
0000ec 93ea      	ST   -Y,R30
                +
0000ed ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 97 ) )
0000ee e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 97 ) )
                 	__POINTW1FN _0x0,97
0000ef 940e 038a 	CALL SUBOPT_0x1
0000f1 940e 031b 	CALL _sprintf
0000f3 9628      	ADIW R28,8
                 ; 0000 00AF lcd_puts(buff);
0000f4 01de      	MOVW R26,R28
0000f5 d055      	RCALL _lcd_puts
                 ; 0000 00B0 }
                 ; 0000 00B1 }
                 _0x6:
0000f6 cfdc      	RJMP _0x3
                 ; 0000 00B2 }
                 _0xA:
0000f7 cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000f8 931a      	ST   -Y,R17
0000f9 2f1a      	MOV  R17,R26
0000fa b3e5      	IN   R30,0x15
0000fb 70ef      	ANDI R30,LOW(0xF)
0000fc 2fae      	MOV  R26,R30
0000fd 2fe1      	MOV  R30,R17
0000fe 7fe0      	ANDI R30,LOW(0xF0)
0000ff 2bea      	OR   R30,R26
000100 bbe5      	OUT  0x15,R30
                +
000101 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
000102 958a     +DEC R24
000103 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
000104 9aaa      	SBI  0x15,2
                +
000105 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
000106 958a     +DEC R24
000107 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
000108 98aa      	CBI  0x15,2
                +
000109 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
00010a 958a     +DEC R24
00010b f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
00010c c08a      	RJMP _0x2080003
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00010d 93aa      	ST   -Y,R26
00010e 81a8      	LD   R26,Y
00010f dfe8      	RCALL __lcd_write_nibble_G100
000110 81e8          ld    r30,y
000111 95e2          swap  r30
000112 83e8          st    y,r30
000113 81a8      	LD   R26,Y
000114 dfe3      	RCALL __lcd_write_nibble_G100
                +
000115 ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
000116 958a     +DEC R24
000117 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
000118 c085      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000119 931a      	ST   -Y,R17
00011a 930a      	ST   -Y,R16
00011b 2f1a      	MOV  R17,R26
00011c 810a      	LDD  R16,Y+2
00011d 2fe1      	MOV  R30,R17
00011e e0f0      	LDI  R31,0
00011f 5ae0      	SUBI R30,LOW(-__base_y_G100)
000120 4ffd      	SBCI R31,HIGH(-__base_y_G100)
000121 81e0      	LD   R30,Z
000122 0fe0      	ADD  R30,R16
000123 2fae      	MOV  R26,R30
000124 dfe8      	RCALL __lcd_write_data
000125 2e50      	MOV  R5,R16
000126 2e41      	MOV  R4,R17
000127 8119      	LDD  R17,Y+1
000128 8108      	LDD  R16,Y+0
000129 9623      	ADIW R28,3
00012a 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00012b e0a2      	LDI  R26,LOW(2)
00012c 940e 0394 	CALL SUBOPT_0x2
00012e e0ac      	LDI  R26,LOW(12)
00012f dfdd      	RCALL __lcd_write_data
000130 e0a1      	LDI  R26,LOW(1)
000131 940e 0394 	CALL SUBOPT_0x2
000133 e0e0      	LDI  R30,LOW(0)
000134 2e4e      	MOV  R4,R30
000135 2e5e      	MOV  R5,R30
000136 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000137 931a      	ST   -Y,R17
000138 2f1a      	MOV  R17,R26
000139 301a      	CPI  R17,10
00013a f011      	BREQ _0x2000005
00013b 1457      	CP   R5,R7
00013c f040      	BRLO _0x2000004
                 _0x2000005:
00013d e0e0      	LDI  R30,LOW(0)
00013e 93ea      	ST   -Y,R30
00013f 9443      	INC  R4
000140 2da4      	MOV  R26,R4
000141 dfd7      	RCALL _lcd_gotoxy
000142 301a      	CPI  R17,10
000143 f409      	BRNE _0x2000007
000144 c052      	RJMP _0x2080003
                 _0x2000007:
                 _0x2000004:
000145 9453      	INC  R5
000146 9aa8      	SBI  0x15,0
000147 2fa1      	MOV  R26,R17
000148 dfc4      	RCALL __lcd_write_data
000149 98a8      	CBI  0x15,0
00014a c04c      	RJMP _0x2080003
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00014b 940e 03d0 	CALL __SAVELOCR4
00014d 019d      	MOVW R18,R26
                 _0x2000008:
00014e 01d9      	MOVW R26,R18
                +
00014f 5f2f     +SUBI R18 , LOW ( - 1 )
000150 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000151 91ec      	LD   R30,X
000152 2f1e      	MOV  R17,R30
000153 30e0      	CPI  R30,0
000154 f019      	BREQ _0x200000A
000155 2fa1      	MOV  R26,R17
000156 dfe0      	RCALL _lcd_putchar
000157 cff6      	RJMP _0x2000008
                 _0x200000A:
000158 c00d      	RJMP _0x2080004
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000159 940e 03d0 	CALL __SAVELOCR4
00015b 019d      	MOVW R18,R26
                 _0x200000B:
00015c 01f9      	MOVW R30,R18
                +
00015d 5f2f     +SUBI R18 , LOW ( - 1 )
00015e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00015f 91e4      	LPM  R30,Z
000160 2f1e      	MOV  R17,R30
000161 30e0      	CPI  R30,0
000162 f019      	BREQ _0x200000D
000163 2fa1      	MOV  R26,R17
000164 dfd2      	RCALL _lcd_putchar
000165 cff6      	RJMP _0x200000B
                 _0x200000D:
                 _0x2080004:
000166 940e 03d7 	CALL __LOADLOCR4
000168 9624      	ADIW R28,4
000169 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00016a 931a      	ST   -Y,R17
00016b 2f1a      	MOV  R17,R26
00016c b3e4      	IN   R30,0x14
00016d 6fe0      	ORI  R30,LOW(0xF0)
00016e bbe4      	OUT  0x14,R30
00016f 9aa2      	SBI  0x14,2
000170 9aa0      	SBI  0x14,0
000171 9aa1      	SBI  0x14,1
000172 98aa      	CBI  0x15,2
000173 98a8      	CBI  0x15,0
000174 98a9      	CBI  0x15,1
000175 2e71      	MOV  R7,R17
000176 2fe1      	MOV  R30,R17
000177 58e0      	SUBI R30,-LOW(128)
                +
000178 93e0 0262+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00017a 2fe1      	MOV  R30,R17
00017b 54e0      	SUBI R30,-LOW(192)
                +
00017c 93e0 0263+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00017e e1a4      	LDI  R26,LOW(20)
00017f e0b0      	LDI  R27,0
000180 940e 03f5 	CALL _delay_ms
000182 940e 039a 	CALL SUBOPT_0x3
000184 940e 039a 	CALL SUBOPT_0x3
000186 940e 039a 	CALL SUBOPT_0x3
000188 e2a0      	LDI  R26,LOW(32)
000189 df6e      	RCALL __lcd_write_nibble_G100
                +
00018a e28c     +LDI R24 , LOW ( 300 )
00018b e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
00018c 9701     +SBIW R24 , 1
00018d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
00018e e2a8      	LDI  R26,LOW(40)
00018f df7d      	RCALL __lcd_write_data
000190 e0a4      	LDI  R26,LOW(4)
000191 df7b      	RCALL __lcd_write_data
000192 e8a5      	LDI  R26,LOW(133)
000193 df79      	RCALL __lcd_write_data
000194 e0a6      	LDI  R26,LOW(6)
000195 df77      	RCALL __lcd_write_data
000196 df94      	RCALL _lcd_clear
                 _0x2080003:
000197 9119      	LD   R17,Y+
000198 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
000199 93aa      	ST   -Y,R26
                 putchar0:
00019a 9b5d           sbis usr,udre
00019b cffe           rjmp putchar0
00019c 81e8           ld   r30,y
00019d b9ec           out  udr,r30
                 _0x2080002:
00019e 9621      	ADIW R28,1
00019f 9508      	RET
                 ; .FEND
                 _put_usart_G101:
                 ; .FSTART _put_usart_G101
0001a0 940e 03d0 	CALL __SAVELOCR4
0001a2 018d      	MOVW R16,R26
0001a3 813c      	LDD  R19,Y+4
0001a4 2fa3      	MOV  R26,R19
0001a5 dff3      	RCALL _putchar
0001a6 01d8      	MOVW R26,R16
0001a7 940e 03a2 	CALL SUBOPT_0x4
0001a9 940e 03d7 	CALL __LOADLOCR4
0001ab 9625      	ADIW R28,5
0001ac 9508      	RET
                 ; .FEND
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001ad 940e 03ce 	CALL __SAVELOCR6
0001af 019d      	MOVW R18,R26
0001b0 815e      	LDD  R21,Y+6
0001b1 9612      	ADIW R26,2
0001b2 940e 03e8 	CALL __GETW1P
0001b4 9730      	SBIW R30,0
0001b5 f101      	BREQ _0x2020010
0001b6 01d9      	MOVW R26,R18
0001b7 9614      	ADIW R26,4
0001b8 940e 03e8 	CALL __GETW1P
0001ba 018f      	MOVW R16,R30
0001bb 9730      	SBIW R30,0
0001bc f059      	BREQ _0x2020012
                +
0001bd 3002     +CPI R16 , LOW ( 2 )
0001be e0e0     +LDI R30 , HIGH ( 2 )
0001bf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001c0 f068      	BRLO _0x2020013
0001c1 01f8      	MOVW R30,R16
0001c2 9731      	SBIW R30,1
0001c3 018f      	MOVW R16,R30
                +
0001c4 01d9     +MOVW R26 , R18
0001c5 9614     +ADIW R26 , 4
0001c6 93ed     +ST X + , R30
0001c7 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2020012:
0001c8 01d9      	MOVW R26,R18
0001c9 9612      	ADIW R26,2
0001ca 940e 03a2 	CALL SUBOPT_0x4
0001cc 9731      	SBIW R30,1
0001cd 8350      	ST   Z,R21
                 _0x2020013:
0001ce 01d9      	MOVW R26,R18
0001cf 940e 03e8 	CALL __GETW1P
0001d1 23ff      	TST  R31
0001d2 f012      	BRMI _0x2020014
0001d3 940e 03a2 	CALL SUBOPT_0x4
                 _0x2020014:
0001d5 c005      	RJMP _0x2020015
                 _0x2020010:
0001d6 01d9      	MOVW R26,R18
0001d7 efef      	LDI  R30,LOW(65535)
0001d8 efff      	LDI  R31,HIGH(65535)
0001d9 93ed      	ST   X+,R30
0001da 93fc      	ST   X,R31
                 _0x2020015:
0001db 940e 03d5 	CALL __LOADLOCR6
0001dd 9627      	ADIW R28,7
0001de 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001df 93ba      	ST   -Y,R27
0001e0 93aa      	ST   -Y,R26
0001e1 9726      	SBIW R28,6
0001e2 940e 03ce 	CALL __SAVELOCR6
0001e4 e010      	LDI  R17,0
0001e5 85ac      	LDD  R26,Y+12
0001e6 85bd      	LDD  R27,Y+12+1
0001e7 e0e0      	LDI  R30,LOW(0)
0001e8 e0f0      	LDI  R31,HIGH(0)
0001e9 93ed      	ST   X+,R30
0001ea 93fc      	ST   X,R31
                 _0x2020016:
0001eb 89ea      	LDD  R30,Y+18
0001ec 89fb      	LDD  R31,Y+18+1
0001ed 9631      	ADIW R30,1
0001ee 8bea      	STD  Y+18,R30
0001ef 8bfb      	STD  Y+18+1,R31
0001f0 9731      	SBIW R30,1
0001f1 91e4      	LPM  R30,Z
0001f2 2f2e      	MOV  R18,R30
0001f3 30e0      	CPI  R30,0
0001f4 f409      	BRNE PC+2
0001f5 c11d      	RJMP _0x2020018
0001f6 2fe1      	MOV  R30,R17
0001f7 30e0      	CPI  R30,0
0001f8 f439      	BRNE _0x202001C
0001f9 3225      	CPI  R18,37
0001fa f411      	BRNE _0x202001D
0001fb e011      	LDI  R17,LOW(1)
0001fc c002      	RJMP _0x202001E
                 _0x202001D:
0001fd 940e 03a8 	CALL SUBOPT_0x5
                 _0x202001E:
0001ff c112      	RJMP _0x202001B
                 _0x202001C:
000200 30e1      	CPI  R30,LOW(0x1)
000201 f4a9      	BRNE _0x202001F
000202 3225      	CPI  R18,37
000203 f419      	BRNE _0x2020020
000204 940e 03a8 	CALL SUBOPT_0x5
000206 c10a      	RJMP _0x20200CC
                 _0x2020020:
000207 e012      	LDI  R17,LOW(2)
000208 e040      	LDI  R20,LOW(0)
000209 e000      	LDI  R16,LOW(0)
00020a 322d      	CPI  R18,45
00020b f411      	BRNE _0x2020021
00020c e001      	LDI  R16,LOW(1)
00020d c104      	RJMP _0x202001B
                 _0x2020021:
00020e 322b      	CPI  R18,43
00020f f411      	BRNE _0x2020022
000210 e24b      	LDI  R20,LOW(43)
000211 c100      	RJMP _0x202001B
                 _0x2020022:
000212 3220      	CPI  R18,32
000213 f411      	BRNE _0x2020023
000214 e240      	LDI  R20,LOW(32)
000215 c0fc      	RJMP _0x202001B
                 _0x2020023:
000216 c002      	RJMP _0x2020024
                 _0x202001F:
000217 30e2      	CPI  R30,LOW(0x2)
000218 f439      	BRNE _0x2020025
                 _0x2020024:
000219 e050      	LDI  R21,LOW(0)
00021a e013      	LDI  R17,LOW(3)
00021b 3320      	CPI  R18,48
00021c f411      	BRNE _0x2020026
00021d 6800      	ORI  R16,LOW(128)
00021e c0f3      	RJMP _0x202001B
                 _0x2020026:
00021f c003      	RJMP _0x2020027
                 _0x2020025:
000220 30e3      	CPI  R30,LOW(0x3)
000221 f009      	BREQ PC+2
000222 c0ef      	RJMP _0x202001B
                 _0x2020027:
000223 3320      	CPI  R18,48
000224 f010      	BRLO _0x202002A
000225 332a      	CPI  R18,58
000226 f008      	BRLO _0x202002B
                 _0x202002A:
000227 c007      	RJMP _0x2020029
                 _0x202002B:
000228 e0aa      	LDI  R26,LOW(10)
000229 9f5a      	MUL  R21,R26
00022a 2d50      	MOV  R21,R0
00022b 2fe2      	MOV  R30,R18
00022c 53e0      	SUBI R30,LOW(48)
00022d 0f5e      	ADD  R21,R30
00022e c0e3      	RJMP _0x202001B
                 _0x2020029:
00022f 2fe2      	MOV  R30,R18
000230 36e3      	CPI  R30,LOW(0x63)
000231 f449      	BRNE _0x202002F
000232 940e 03af 	CALL SUBOPT_0x6
000234 89e8      	LDD  R30,Y+16
000235 89f9      	LDD  R31,Y+16+1
000236 81a4      	LDD  R26,Z+4
000237 93aa      	ST   -Y,R26
000238 940e 03b5 	CALL SUBOPT_0x7
00023a c0d6      	RJMP _0x2020030
                 _0x202002F:
00023b 37e3      	CPI  R30,LOW(0x73)
00023c f441      	BRNE _0x2020032
00023d 940e 03af 	CALL SUBOPT_0x6
00023f 940e 03bb 	CALL SUBOPT_0x8
000241 940e 036a 	CALL _strlen
000243 2f1e      	MOV  R17,R30
000244 c00a      	RJMP _0x2020033
                 _0x2020032:
000245 37e0      	CPI  R30,LOW(0x70)
000246 f461      	BRNE _0x2020035
000247 940e 03af 	CALL SUBOPT_0x6
000249 940e 03bb 	CALL SUBOPT_0x8
00024b 940e 0376 	CALL _strlenf
00024d 2f1e      	MOV  R17,R30
00024e 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00024f 6002      	ORI  R16,LOW(2)
000250 770f      	ANDI R16,LOW(127)
000251 e030      	LDI  R19,LOW(0)
000252 c03c      	RJMP _0x2020036
                 _0x2020035:
000253 36e4      	CPI  R30,LOW(0x64)
000254 f011      	BREQ _0x2020039
000255 36e9      	CPI  R30,LOW(0x69)
000256 f411      	BRNE _0x202003A
                 _0x2020039:
000257 6004      	ORI  R16,LOW(4)
000258 c002      	RJMP _0x202003B
                 _0x202003A:
000259 37e5      	CPI  R30,LOW(0x75)
00025a f431      	BRNE _0x202003C
                 _0x202003B:
00025b e5e4      	LDI  R30,LOW(_tbl10_G101*2)
00025c e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00025d 83ee      	STD  Y+6,R30
00025e 83ff      	STD  Y+6+1,R31
00025f e015      	LDI  R17,LOW(5)
000260 c00c      	RJMP _0x202003D
                 _0x202003C:
000261 35e8      	CPI  R30,LOW(0x58)
000262 f411      	BRNE _0x202003F
000263 6008      	ORI  R16,LOW(8)
000264 c003      	RJMP _0x2020040
                 _0x202003F:
000265 37e8      	CPI  R30,LOW(0x78)
000266 f009      	BREQ PC+2
000267 c0a9      	RJMP _0x2020071
                 _0x2020040:
000268 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000269 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00026a 83ee      	STD  Y+6,R30
00026b 83ff      	STD  Y+6+1,R31
00026c e014      	LDI  R17,LOW(4)
                 _0x202003D:
00026d ff02      	SBRS R16,2
00026e c017      	RJMP _0x2020042
00026f 940e 03af 	CALL SUBOPT_0x6
000271 89a8      	LDD  R26,Y+16
000272 89b9      	LDD  R27,Y+16+1
000273 9614      	ADIW R26,4
000274 91ed      	LD   R30,X+
000275 91fd      	LD   R31,X+
000276 87ea      	STD  Y+10,R30
000277 87fb      	STD  Y+10+1,R31
000278 85ab      	LDD  R26,Y+11
000279 23aa      	TST  R26
00027a f42a      	BRPL _0x2020043
00027b 940e 03e4 	CALL __ANEGW1
00027d 87ea      	STD  Y+10,R30
00027e 87fb      	STD  Y+10+1,R31
00027f e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000280 3040      	CPI  R20,0
000281 f011      	BREQ _0x2020044
000282 5f1f      	SUBI R17,-LOW(1)
000283 c001      	RJMP _0x2020045
                 _0x2020044:
000284 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000285 c009      	RJMP _0x2020046
                 _0x2020042:
000286 940e 03af 	CALL SUBOPT_0x6
000288 89a8      	LDD  R26,Y+16
000289 89b9      	LDD  R27,Y+16+1
00028a 9614      	ADIW R26,4
00028b 940e 03e8 	CALL __GETW1P
00028d 87ea      	STD  Y+10,R30
00028e 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
00028f fd00      	SBRC R16,0
000290 c011      	RJMP _0x2020047
                 _0x2020048:
000291 1715      	CP   R17,R21
000292 f478      	BRSH _0x202004A
000293 ff07      	SBRS R16,7
000294 c008      	RJMP _0x202004B
000295 ff02      	SBRS R16,2
000296 c004      	RJMP _0x202004C
000297 7f0b      	ANDI R16,LOW(251)
000298 2f24      	MOV  R18,R20
000299 5011      	SUBI R17,LOW(1)
00029a c001      	RJMP _0x202004D
                 _0x202004C:
00029b e320      	LDI  R18,LOW(48)
                 _0x202004D:
00029c c001      	RJMP _0x202004E
                 _0x202004B:
00029d e220      	LDI  R18,LOW(32)
                 _0x202004E:
00029e 940e 03a8 	CALL SUBOPT_0x5
0002a0 5051      	SUBI R21,LOW(1)
0002a1 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0002a2 2f31      	MOV  R19,R17
0002a3 ff01      	SBRS R16,1
0002a4 c017      	RJMP _0x202004F
                 _0x2020050:
0002a5 3030      	CPI  R19,0
0002a6 f0a1      	BREQ _0x2020052
0002a7 ff03      	SBRS R16,3
0002a8 c006      	RJMP _0x2020053
0002a9 81ee      	LDD  R30,Y+6
0002aa 81ff      	LDD  R31,Y+6+1
0002ab 9125      	LPM  R18,Z+
0002ac 83ee      	STD  Y+6,R30
0002ad 83ff      	STD  Y+6+1,R31
0002ae c005      	RJMP _0x2020054
                 _0x2020053:
0002af 81ae      	LDD  R26,Y+6
0002b0 81bf      	LDD  R27,Y+6+1
0002b1 912d      	LD   R18,X+
0002b2 83ae      	STD  Y+6,R26
0002b3 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0002b4 940e 03a8 	CALL SUBOPT_0x5
0002b6 3050      	CPI  R21,0
0002b7 f009      	BREQ _0x2020055
0002b8 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0002b9 5031      	SUBI R19,LOW(1)
0002ba cfea      	RJMP _0x2020050
                 _0x2020052:
0002bb c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002bc e320      	LDI  R18,LOW(48)
0002bd 81ee      	LDD  R30,Y+6
0002be 81ff      	LDD  R31,Y+6+1
0002bf 940e 03ec 	CALL __GETW1PF
0002c1 87e8      	STD  Y+8,R30
0002c2 87f9      	STD  Y+8+1,R31
0002c3 81ee      	LDD  R30,Y+6
0002c4 81ff      	LDD  R31,Y+6+1
0002c5 9632      	ADIW R30,2
0002c6 83ee      	STD  Y+6,R30
0002c7 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002c8 85e8      	LDD  R30,Y+8
0002c9 85f9      	LDD  R31,Y+8+1
0002ca 85aa      	LDD  R26,Y+10
0002cb 85bb      	LDD  R27,Y+10+1
0002cc 17ae      	CP   R26,R30
0002cd 07bf      	CPC  R27,R31
0002ce f050      	BRLO _0x202005C
0002cf 5f2f      	SUBI R18,-LOW(1)
0002d0 85a8      	LDD  R26,Y+8
0002d1 85b9      	LDD  R27,Y+8+1
0002d2 85ea      	LDD  R30,Y+10
0002d3 85fb      	LDD  R31,Y+10+1
0002d4 1bea      	SUB  R30,R26
0002d5 0bfb      	SBC  R31,R27
0002d6 87ea      	STD  Y+10,R30
0002d7 87fb      	STD  Y+10+1,R31
0002d8 cfef      	RJMP _0x202005A
                 _0x202005C:
0002d9 332a      	CPI  R18,58
0002da f028      	BRLO _0x202005D
0002db ff03      	SBRS R16,3
0002dc c002      	RJMP _0x202005E
0002dd 5f29      	SUBI R18,-LOW(7)
0002de c001      	RJMP _0x202005F
                 _0x202005E:
0002df 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002e0 fd04      	SBRC R16,4
0002e1 c01a      	RJMP _0x2020061
0002e2 3321      	CPI  R18,49
0002e3 f420      	BRSH _0x2020063
0002e4 85a8      	LDD  R26,Y+8
0002e5 85b9      	LDD  R27,Y+8+1
0002e6 9711      	SBIW R26,1
0002e7 f409      	BRNE _0x2020062
                 _0x2020063:
0002e8 c009      	RJMP _0x20200CD
                 _0x2020062:
0002e9 1753      	CP   R21,R19
0002ea f010      	BRLO _0x2020067
0002eb ff00      	SBRS R16,0
0002ec c001      	RJMP _0x2020068
                 _0x2020067:
0002ed c013      	RJMP _0x2020066
                 _0x2020068:
0002ee e220      	LDI  R18,LOW(32)
0002ef ff07      	SBRS R16,7
0002f0 c00b      	RJMP _0x2020069
0002f1 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002f2 6100      	ORI  R16,LOW(16)
0002f3 ff02      	SBRS R16,2
0002f4 c007      	RJMP _0x202006A
0002f5 7f0b      	ANDI R16,LOW(251)
0002f6 934a      	ST   -Y,R20
0002f7 940e 03b5 	CALL SUBOPT_0x7
0002f9 3050      	CPI  R21,0
0002fa f009      	BREQ _0x202006B
0002fb 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002fc 940e 03a8 	CALL SUBOPT_0x5
0002fe 3050      	CPI  R21,0
0002ff f009      	BREQ _0x202006C
000300 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000301 5031      	SUBI R19,LOW(1)
000302 85a8      	LDD  R26,Y+8
000303 85b9      	LDD  R27,Y+8+1
000304 9712      	SBIW R26,2
000305 f008      	BRLO _0x2020059
000306 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000307 ff00      	SBRS R16,0
000308 c008      	RJMP _0x202006D
                 _0x202006E:
000309 3050      	CPI  R21,0
00030a f031      	BREQ _0x2020070
00030b 5051      	SUBI R21,LOW(1)
00030c e2e0      	LDI  R30,LOW(32)
00030d 93ea      	ST   -Y,R30
00030e 940e 03b5 	CALL SUBOPT_0x7
000310 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000311 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000312 ced8      	RJMP _0x2020016
                 _0x2020018:
000313 85ac      	LDD  R26,Y+12
000314 85bd      	LDD  R27,Y+12+1
000315 91ed      	LD   R30,X+
000316 91fd      	LD   R31,X+
000317 940e 03d5 	CALL __LOADLOCR6
000319 9664      	ADIW R28,20
00031a 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00031b 92ff      	PUSH R15
00031c 2ef8      	MOV  R15,R24
00031d 9726      	SBIW R28,6
00031e 940e 03ce 	CALL __SAVELOCR6
000320 01fe      	MOVW R30,R28
000321 940e 03dc 	CALL __ADDW1R15
                +
000323 8546     +LDD R20 , Z + 14
000324 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
000325 2e04      	MOV  R0,R20
000326 2a05      	OR   R0,R21
000327 f419      	BRNE _0x2020072
000328 efef      	LDI  R30,LOW(65535)
000329 efff      	LDI  R31,HIGH(65535)
00032a c01b      	RJMP _0x2080001
                 _0x2020072:
00032b 01de      	MOVW R26,R28
00032c 9618      	ADIW R26,8
00032d 940e 03e0 	CALL __ADDW2R15
00032f 018d      	MOVW R16,R26
                +
000330 8748     +STD Y + 8 , R20
000331 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000332 e0e0      	LDI  R30,LOW(0)
000333 87ea      	STD  Y+10,R30
000334 87eb      	STD  Y+10+1,R30
000335 01de      	MOVW R26,R28
000336 961c      	ADIW R26,12
000337 940e 03c5 	CALL SUBOPT_0x9
000339 eaed      	LDI  R30,LOW(_put_buff_G101)
00033a e0f1      	LDI  R31,HIGH(_put_buff_G101)
00033b 93fa      	ST   -Y,R31
00033c 93ea      	ST   -Y,R30
00033d 01de      	MOVW R26,R28
00033e 961c      	ADIW R26,12
00033f de9f      	RCALL __print_G101
000340 019f      	MOVW R18,R30
000341 85a8      	LDD  R26,Y+8
000342 85b9      	LDD  R27,Y+8+1
000343 e0e0      	LDI  R30,LOW(0)
000344 93ec      	ST   X,R30
000345 01f9      	MOVW R30,R18
                 _0x2080001:
000346 940e 03d5 	CALL __LOADLOCR6
000348 962c      	ADIW R28,12
000349 90ff      	POP  R15
00034a 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00034b 92ff      	PUSH R15
00034c 2ef8      	MOV  R15,R24
00034d 9726      	SBIW R28,6
00034e 931a      	ST   -Y,R17
00034f 930a      	ST   -Y,R16
000350 01de      	MOVW R26,R28
000351 9614      	ADIW R26,4
000352 940e 03e0 	CALL __ADDW2R15
000354 018d      	MOVW R16,R26
000355 e0e0      	LDI  R30,LOW(0)
000356 83ec      	STD  Y+4,R30
000357 83ed      	STD  Y+4+1,R30
000358 83ee      	STD  Y+6,R30
000359 83ef      	STD  Y+6+1,R30
00035a 01de      	MOVW R26,R28
00035b 9618      	ADIW R26,8
00035c 940e 03c5 	CALL SUBOPT_0x9
00035e eae0      	LDI  R30,LOW(_put_usart_G101)
00035f e0f1      	LDI  R31,HIGH(_put_usart_G101)
000360 93fa      	ST   -Y,R31
000361 93ea      	ST   -Y,R30
000362 01de      	MOVW R26,R28
000363 9618      	ADIW R26,8
000364 de7a      	RCALL __print_G101
000365 8119      	LDD  R17,Y+1
000366 8108      	LDD  R16,Y+0
000367 9628      	ADIW R28,8
000368 90ff      	POP  R15
000369 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00036a 93ba      	ST   -Y,R27
00036b 93aa      	ST   -Y,R26
00036c 91a9          ld   r26,y+
00036d 91b9          ld   r27,y+
00036e 27ee          clr  r30
00036f 27ff          clr  r31
                 strlen0:
000370 916d          ld   r22,x+
000371 2366          tst  r22
000372 f011          breq strlen1
000373 9631          adiw r30,1
000374 cffb          rjmp strlen0
                 strlen1:
000375 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000376 93ba      	ST   -Y,R27
000377 93aa      	ST   -Y,R26
000378 27aa          clr  r26
000379 27bb          clr  r27
00037a 91e9          ld   r30,y+
00037b 91f9          ld   r31,y+
                 strlenf0:
00037c 9005      	lpm  r0,z+
00037d 2000          tst  r0
00037e f011          breq strlenf1
00037f 9611          adiw r26,1
000380 cffb          rjmp strlenf0
                 strlenf1:
000381 01fd          movw r30,r26
000382 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000383 93fa      	ST   -Y,R31
000384 93ea      	ST   -Y,R30
000385 e080      	LDI  R24,0
000386 940e 034b 	CALL _printf
000388 9622      	ADIW R28,2
000389 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1:
00038a 93fa      	ST   -Y,R31
00038b 93ea      	ST   -Y,R30
00038c 2fe1      	MOV  R30,R17
00038d 27ff      	CLR  R31
00038e 2766      	CLR  R22
00038f 2777      	CLR  R23
000390 940e 03f0 	CALL __PUTPARD1
000392 e084      	LDI  R24,4
000393 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000394 940e 010d 	CALL __lcd_write_data
000396 e0a3      	LDI  R26,LOW(3)
000397 e0b0      	LDI  R27,0
000398 940c 03f5 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
00039a e3a0      	LDI  R26,LOW(48)
00039b 940e 00f8 	CALL __lcd_write_nibble_G100
                +
00039d e28c     +LDI R24 , LOW ( 300 )
00039e e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
00039f 9701     +SBIW R24 , 1
0003a0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0003a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0003a2 91ed      	LD   R30,X+
0003a3 91fd      	LD   R31,X+
0003a4 9631      	ADIW R30,1
0003a5 93fe      	ST   -X,R31
0003a6 93ee      	ST   -X,R30
0003a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
0003a8 932a      	ST   -Y,R18
0003a9 85ad      	LDD  R26,Y+13
0003aa 85be      	LDD  R27,Y+13+1
0003ab 85ef      	LDD  R30,Y+15
0003ac 89f8      	LDD  R31,Y+15+1
0003ad 9509      	ICALL
0003ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
0003af 89e8      	LDD  R30,Y+16
0003b0 89f9      	LDD  R31,Y+16+1
0003b1 9734      	SBIW R30,4
0003b2 8be8      	STD  Y+16,R30
0003b3 8bf9      	STD  Y+16+1,R31
0003b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0003b5 85ad      	LDD  R26,Y+13
0003b6 85be      	LDD  R27,Y+13+1
0003b7 85ef      	LDD  R30,Y+15
0003b8 89f8      	LDD  R31,Y+15+1
0003b9 9509      	ICALL
0003ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
0003bb 89a8      	LDD  R26,Y+16
0003bc 89b9      	LDD  R27,Y+16+1
0003bd 9614      	ADIW R26,4
0003be 91ed      	LD   R30,X+
0003bf 91fd      	LD   R31,X+
0003c0 83ee      	STD  Y+6,R30
0003c1 83ff      	STD  Y+6+1,R31
0003c2 81ae      	LDD  R26,Y+6
0003c3 81bf      	LDD  R27,Y+6+1
0003c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
0003c5 940e 03e0 	CALL __ADDW2R15
0003c7 91ed      	LD   R30,X+
0003c8 91fd      	LD   R31,X+
0003c9 93fa      	ST   -Y,R31
0003ca 93ea      	ST   -Y,R30
0003cb 931a      	ST   -Y,R17
0003cc 930a      	ST   -Y,R16
0003cd 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003ce 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003cf 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003d0 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003d1 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003d2 931a      	ST   -Y,R17
0003d3 930a      	ST   -Y,R16
0003d4 9508      	RET
                 
                 __LOADLOCR6:
0003d5 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003d6 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003d7 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003d8 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003d9 8119      	LDD  R17,Y+1
0003da 8108      	LD   R16,Y
0003db 9508      	RET
                 
                 __ADDW1R15:
0003dc 2400      	CLR  R0
0003dd 0def      	ADD  R30,R15
0003de 1df0      	ADC  R31,R0
0003df 9508      	RET
                 
                 __ADDW2R15:
0003e0 2400      	CLR  R0
0003e1 0daf      	ADD  R26,R15
0003e2 1db0      	ADC  R27,R0
0003e3 9508      	RET
                 
                 __ANEGW1:
0003e4 95f1      	NEG  R31
0003e5 95e1      	NEG  R30
0003e6 40f0      	SBCI R31,0
0003e7 9508      	RET
                 
                 __GETW1P:
0003e8 91ed      	LD   R30,X+
0003e9 91fc      	LD   R31,X
0003ea 9711      	SBIW R26,1
0003eb 9508      	RET
                 
                 __GETW1PF:
0003ec 9005      	LPM  R0,Z+
0003ed 91f4      	LPM  R31,Z
0003ee 2de0      	MOV  R30,R0
0003ef 9508      	RET
                 
                 __PUTPARD1:
0003f0 937a      	ST   -Y,R23
0003f1 936a      	ST   -Y,R22
0003f2 93fa      	ST   -Y,R31
0003f3 93ea      	ST   -Y,R30
0003f4 9508      	RET
                 
                 _delay_ms:
0003f5 9610      	adiw r26,0
0003f6 f039      	breq __delay_ms1
                 __delay_ms0:
0003f7 95a8      	wdr
                +
0003f8 eb88     +LDI R24 , LOW ( 0xBB8 )
0003f9 e09b     +LDI R25 , HIGH ( 0xBB8 )
                +__DELAY_USW_LOOP :
0003fa 9701     +SBIW R24 , 1
0003fb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xBB8
0003fc 9711      	sbiw r26,1
0003fd f7c9      	brne __delay_ms0
                 __delay_ms1:
0003fe 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  15 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   8 
r16:  42 r17:  46 r18:  41 r19:  12 r20:  12 r21:  22 r22:   6 r23:   2 
r24:  25 r25:   5 r26: 103 r27:  28 r28:  25 r29:   1 r30: 213 r31:  65 
x  :  27 y  : 152 z  :  18 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   4 
adiw  :  30 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  59 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  34 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  26 ldd   :  64 ldi   : 103 
lds   :   0 lpm   :  16 lsl   :   0 lsr   :   0 mov   :  36 movw  :  32 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   7 out   :  47 pop   :   2 push  :   2 rcall :  22 ret   :  30 
reti  :   0 rjmp  :  64 rol   :   0 ror   :   0 sbc   :   1 sbci  :   4 
sbi   :   5 sbic  :   1 sbis  :   2 sbiw  :  20 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  60 std   :  34 sts   :   2 sub   :   1 subi  :  19 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0007fe   1912    134   2046   32768   6.2%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 4 warnings
