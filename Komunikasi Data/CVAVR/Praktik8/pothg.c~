/*******************************************************
This program was created by the CodeWizardAVR V3.40 
Automatic Program Generator
© Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
http://www.hpinfotech.ro

Project : 
Version : 
Date    : 02/06/2025
Author  : 
Company : 
Comments: 


Chip type               : ATmega32
Program type            : Application
AVR Core Clock frequency: 12,000000 MHz
Memory model            : Small
External RAM size       : 0
Data Stack size         : 512
*******************************************************/

#include <mega32.h>
#include <stdlib.h>
#include <delay.h>
#include <stdio.h>
#include <alcd.h>

char dataADC[32];

// Voltage Reference: AREF pin
#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))

// Read the AD conversion result
unsigned int read_adc(unsigned char adc_input)
{
ADMUX=adc_input | ADC_VREF_TYPE;
// Delay needed for the stabilization of the ADC input voltage
delay_us(10);
// Start the AD conversion
ADCSRA|=(1<<ADSC);
// Wait for the AD conversion to complete
while ((ADCSRA & (1<<ADIF))==0);
ADCSRA|=(1<<ADIF);
return ADCW;
}

void main(void)
{
long adc0, adc1, adc2, adc3;
lcd_init(16);
ADCSRA = 0x87;
while (1)
      {    
      
       lcd_clear();  
       adc0 = (read_adc(0) *1000 ) / 1023 ;
       lcd_gotoxy(0,0);
       sprintf(dataADC, "Pot 1 : %d", adc0);  
       lcd_puts(dataADC); 
             
       
       lcd_gotoxy(0,1);
       adc1 = (read_adc(1)* 2000 ) / 1023;
       sprintf(dataADC, "Pot 2 : %d", adc1);
       lcd_puts(dataADC); 
                           
       
       lcd_gotoxy(0,2);
       adc2 = (read_adc(2)*5000 ) / 1023;
       sprintf(dataADC, "Pot 3 : %ld", adc2);
       lcd_puts(dataADC); 
                         
       
       lcd_gotoxy(0,3);
       adc3 = (read_adc(3)*25000 ) / 1023;
       sprintf(dataADC, "Pot 4 : %ld", adc3);
       lcd_puts(dataADC);  
       
       delay_ms(1000);

      }
}
