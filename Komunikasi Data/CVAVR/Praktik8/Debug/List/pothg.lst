
AVRASM ver. 2.1.30  E:\CVAVR\Praktik8\Debug\List\pothg.asm Mon Jun 02 20:18:24 2025

E:\CVAVR\Praktik8\Debug\List\pothg.asm(1083): warning: Register r5 already defined by the .DEF directive
E:\CVAVR\Praktik8\Debug\List\pothg.asm(1084): warning: Register r4 already defined by the .DEF directive
E:\CVAVR\Praktik8\Debug\List\pothg.asm(1085): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.40 Advanced
                 ;(C) Copyright 1998-2020 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 12,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0057 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6f50
000034 2074
000035 2031
000036 203a      	.DB  0x50,0x6F,0x74,0x20,0x31,0x20,0x3A,0x20
000037 6425
000038 5000
000039 746f
00003a 3220      	.DB  0x25,0x64,0x0,0x50,0x6F,0x74,0x20,0x32
00003b 3a20
00003c 2520
00003d 0064
00003e 6f50      	.DB  0x20,0x3A,0x20,0x25,0x64,0x0,0x50,0x6F
00003f 2074
000040 2033
000041 203a
000042 6425      	.DB  0x74,0x20,0x33,0x20,0x3A,0x20,0x25,0x64
000043 5000
000044 746f
000045 3420
000046 3a20      	.DB  0x0,0x50,0x6F,0x74,0x20,0x34,0x20,0x3A
000047 2520
000048 0064      	.DB  0x20,0x25,0x64,0x0
                 _0x2000060:
E:\CVAVR\Praktik8\Debug\List\pothg.asm(1130): warning: .cseg .db misalignment - padding zero byte
000049 0001      	.DB  0x1
                 _0x2000000:
00004a 4e2d
00004b 4e41
00004c 4900
00004d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\CVAVR\Praktik8\Debug\List\pothg.asm(1133): warning: .cseg .db misalignment - padding zero byte
00004e 0000      	.DB  0x0
                 _0x2040003:
00004f c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000050 0001      	.DW  0x01
000051 0280      	.DW  __seed_G100
000052 0092      	.DW  _0x2000060*2
                 
000053 0002      	.DW  0x02
000054 0284      	.DW  __base_y_G102
000055 009e      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
000056 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000057 94f8      	CLI
000058 27ee      	CLR  R30
000059 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005a e0f1      	LDI  R31,1
00005b bffb      	OUT  GICR,R31
00005c bfeb      	OUT  GICR,R30
00005d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005e e08d      	LDI  R24,(14-2)+1
00005f e0a2      	LDI  R26,2
000060 27bb      	CLR  R27
                 __CLEAR_REG:
000061 93ed      	ST   X+,R30
000062 958a      	DEC  R24
000063 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000064 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000065 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000066 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000067 93ed      	ST   X+,R30
000068 9701      	SBIW R24,1
000069 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00006a eae0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006c 9185      	LPM  R24,Z+
00006d 9195      	LPM  R25,Z+
00006e 9700      	SBIW R24,0
00006f f061      	BREQ __GLOBAL_INI_END
000070 91a5      	LPM  R26,Z+
000071 91b5      	LPM  R27,Z+
000072 9005      	LPM  R0,Z+
000073 9015      	LPM  R1,Z+
000074 01bf      	MOVW R22,R30
000075 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000076 9005      	LPM  R0,Z+
000077 920d      	ST   X+,R0
000078 9701      	SBIW R24,1
000079 f7e1      	BRNE __GLOBAL_INI_LOOP
00007a 01fb      	MOVW R30,R22
00007b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007d bfed      	OUT  SPL,R30
00007e e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000080 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000081 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000082 940c 0093 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;char dataADC[32];
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0024 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0025 ADMUX=adc_input | ADC_VREF_TYPE;
000084 931a      	ST   -Y,R17
000085 2f1a      	MOV  R17,R26
                 ;	adc_input -> R17
000086 2fe1      	MOV  R30,R17
000087 b9e7      	OUT  0x7,R30
                 ; 0000 0026 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0027 delay_us(10);
                +
000088 e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
000089 958a     +DEC R24
00008a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
                 ; 0000 0028 // Start the AD conversion
                 ; 0000 0029 ADCSRA|=(1<<ADSC);
00008b 9a36      	SBI  0x6,6
                 ; 0000 002A // Wait for the AD conversion to complete
                 ; 0000 002B while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00008c 9b34      	SBIS 0x6,4
00008d cffe      	RJMP _0x3
                 ; 0000 002C ADCSRA|=(1<<ADIF);
00008e 9a34      	SBI  0x6,4
                 ; 0000 002D return ADCW;
00008f b1e4      	IN   R30,0x4
000090 b1f5      	IN   R31,0x4+1
000091 940c 0343 	JMP  _0x20C0001
                 ; 0000 002E }
                 ; .FEND
                 ;void main(void)
                 ; 0000 0031 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0032 int adc0, adc1, adc2, adc3;
                 ; 0000 0033 lcd_init(16);
000093 9722      	SBIW R28,2
                 ;	adc0 -> R16,R17
                 ;	adc1 -> R18,R19
                 ;	adc2 -> R20,R21
                 ;	adc3 -> Y+0
000094 e1a0      	LDI  R26,LOW(16)
000095 940e 0316 	CALL _lcd_init
                 ; 0000 0034 ADCSRA = 0x87;
000097 e8e7      	LDI  R30,LOW(135)
000098 b9e6      	OUT  0x6,R30
                 ; 0000 0035 while (1)
                 _0x6:
                 ; 0000 0036 {
                 ; 0000 0037 
                 ; 0000 0038 lcd_clear();
000099 940e 02e5 	CALL _lcd_clear
                 ; 0000 0039 adc0 = (read_adc(0) *1000L ) / 1023 ;
00009b e0a0      	LDI  R26,LOW(0)
00009c 940e 035e 	CALL SUBOPT_0x0
                +
00009e eea8     +LDI R26 , LOW ( 0x3E8 )
00009f e0b3     +LDI R27 , HIGH ( 0x3E8 )
0000a0 e080     +LDI R24 , BYTE3 ( 0x3E8 )
0000a1 e090     +LDI R25 , BYTE4 ( 0x3E8 )
                 	__GETD2N 0x3E8
0000a2 940e 0363 	CALL SUBOPT_0x1
0000a4 018f      	MOVW R16,R30
                 ; 0000 003A lcd_gotoxy(0,0);
0000a5 e0e0      	LDI  R30,LOW(0)
0000a6 93ea      	ST   -Y,R30
0000a7 e0a0      	LDI  R26,LOW(0)
0000a8 940e 02d3 	CALL _lcd_gotoxy
                 ; 0000 003B sprintf(dataADC, "Pot 1 : %d", adc0);
0000aa 940e 036e 	CALL SUBOPT_0x2
                +
0000ac e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000ad e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ae 93fa      	ST   -Y,R31
0000af 93ea      	ST   -Y,R30
0000b0 01f8      	MOVW R30,R16
0000b1 940e 0373 	CALL SUBOPT_0x3
                 ; 0000 003C lcd_puts(dataADC);
                 ; 0000 003D 
                 ; 0000 003E 
                 ; 0000 003F lcd_gotoxy(0,1);
0000b3 e0a1      	LDI  R26,LOW(1)
0000b4 940e 02d3 	CALL _lcd_gotoxy
                 ; 0000 0040 adc1 = (read_adc(1)* 2000L ) / 1023;
0000b6 e0a1      	LDI  R26,LOW(1)
0000b7 940e 035e 	CALL SUBOPT_0x0
                +
0000b9 eda0     +LDI R26 , LOW ( 0x7D0 )
0000ba e0b7     +LDI R27 , HIGH ( 0x7D0 )
0000bb e080     +LDI R24 , BYTE3 ( 0x7D0 )
0000bc e090     +LDI R25 , BYTE4 ( 0x7D0 )
                 	__GETD2N 0x7D0
0000bd 940e 0363 	CALL SUBOPT_0x1
0000bf 019f      	MOVW R18,R30
                 ; 0000 0041 sprintf(dataADC, "Pot 2 : %d", adc1);
0000c0 940e 036e 	CALL SUBOPT_0x2
                +
0000c2 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 11 ) )
0000c3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 11 ) )
                 	__POINTW1FN _0x0,11
0000c4 93fa      	ST   -Y,R31
0000c5 93ea      	ST   -Y,R30
0000c6 01f9      	MOVW R30,R18
0000c7 940e 0373 	CALL SUBOPT_0x3
                 ; 0000 0042 lcd_puts(dataADC);
                 ; 0000 0043 
                 ; 0000 0044 
                 ; 0000 0045 lcd_gotoxy(0,2);
0000c9 e0a2      	LDI  R26,LOW(2)
0000ca 940e 02d3 	CALL _lcd_gotoxy
                 ; 0000 0046 adc2 = (read_adc(2)*5000L ) / 1023;
0000cc e0a2      	LDI  R26,LOW(2)
0000cd 940e 035e 	CALL SUBOPT_0x0
                +
0000cf e8a8     +LDI R26 , LOW ( 0x1388 )
0000d0 e1b3     +LDI R27 , HIGH ( 0x1388 )
0000d1 e080     +LDI R24 , BYTE3 ( 0x1388 )
0000d2 e090     +LDI R25 , BYTE4 ( 0x1388 )
                 	__GETD2N 0x1388
0000d3 940e 0363 	CALL SUBOPT_0x1
0000d5 01af      	MOVW R20,R30
                 ; 0000 0047 sprintf(dataADC, "Pot 3 : %d", adc2);
0000d6 940e 036e 	CALL SUBOPT_0x2
                +
0000d8 e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
0000d9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
0000da 93fa      	ST   -Y,R31
0000db 93ea      	ST   -Y,R30
0000dc 01fa      	MOVW R30,R20
0000dd 940e 0373 	CALL SUBOPT_0x3
                 ; 0000 0048 lcd_puts(dataADC);
                 ; 0000 0049 
                 ; 0000 004A 
                 ; 0000 004B lcd_gotoxy(0,3);
0000df e0a3      	LDI  R26,LOW(3)
0000e0 940e 02d3 	CALL _lcd_gotoxy
                 ; 0000 004C adc3 = (read_adc(3)*25000L ) / 1023;
0000e2 e0a3      	LDI  R26,LOW(3)
0000e3 940e 035e 	CALL SUBOPT_0x0
                +
0000e5 eaa8     +LDI R26 , LOW ( 0x61A8 )
0000e6 e6b1     +LDI R27 , HIGH ( 0x61A8 )
0000e7 e080     +LDI R24 , BYTE3 ( 0x61A8 )
0000e8 e090     +LDI R25 , BYTE4 ( 0x61A8 )
                 	__GETD2N 0x61A8
0000e9 940e 0363 	CALL SUBOPT_0x1
0000eb 83e8      	ST   Y,R30
0000ec 83f9      	STD  Y+1,R31
                 ; 0000 004D sprintf(dataADC, "Pot 4 : %d", adc3);
0000ed 940e 036e 	CALL SUBOPT_0x2
                +
0000ef e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 33 ) )
0000f0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 33 ) )
                 	__POINTW1FN _0x0,33
0000f1 93fa      	ST   -Y,R31
0000f2 93ea      	ST   -Y,R30
0000f3 81ec      	LDD  R30,Y+4
0000f4 81fd      	LDD  R31,Y+4+1
0000f5 940e 03c7 	CALL __CWD1
0000f7 940e 0418 	CALL __PUTPARD1
0000f9 e084      	LDI  R24,4
0000fa 940e 027b 	CALL _sprintf
0000fc 9628      	ADIW R28,8
                 ; 0000 004E lcd_puts(dataADC);
0000fd e6a0      	LDI  R26,LOW(_dataADC)
0000fe e0b2      	LDI  R27,HIGH(_dataADC)
0000ff 940e 0305 	CALL _lcd_puts
                 ; 0000 004F 
                 ; 0000 0050 delay_ms(1000);
000101 eea8      	LDI  R26,LOW(1000)
000102 e0b3      	LDI  R27,HIGH(1000)
000103 940e 041d 	CALL _delay_ms
                 ; 0000 0051 
                 ; 0000 0052 }
000105 cf93      	RJMP _0x6
                 ; 0000 0053 }
                 _0x9:
000106 cfff      	RJMP _0x9
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000107 940e 03ad 	CALL __SAVELOCR6
000109 019d      	MOVW R18,R26
00010a 815e      	LDD  R21,Y+6
00010b 9612      	ADIW R26,2
00010c 940e 0410 	CALL __GETW1P
00010e 9730      	SBIW R30,0
00010f f131      	BREQ _0x2020010
000110 01d9      	MOVW R26,R18
000111 9614      	ADIW R26,4
000112 940e 0410 	CALL __GETW1P
000114 018f      	MOVW R16,R30
000115 9730      	SBIW R30,0
000116 f059      	BREQ _0x2020012
                +
000117 3002     +CPI R16 , LOW ( 2 )
000118 e0e0     +LDI R30 , HIGH ( 2 )
000119 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00011a f080      	BRLO _0x2020013
00011b 01f8      	MOVW R30,R16
00011c 9731      	SBIW R30,1
00011d 018f      	MOVW R16,R30
                +
00011e 01d9     +MOVW R26 , R18
00011f 9614     +ADIW R26 , 4
000120 93ed     +ST X + , R30
000121 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2020012:
000122 01d9      	MOVW R26,R18
000123 9612      	ADIW R26,2
000124 91ed      	LD   R30,X+
000125 91fd      	LD   R31,X+
000126 9631      	ADIW R30,1
000127 93fe      	ST   -X,R31
000128 93ee      	ST   -X,R30
000129 9731      	SBIW R30,1
00012a 8350      	ST   Z,R21
                 _0x2020013:
00012b 01d9      	MOVW R26,R18
00012c 940e 0410 	CALL __GETW1P
00012e 23ff      	TST  R31
00012f f02a      	BRMI _0x2020014
000130 91ed      	LD   R30,X+
000131 91fd      	LD   R31,X+
000132 9631      	ADIW R30,1
000133 93fe      	ST   -X,R31
000134 93ee      	ST   -X,R30
                 _0x2020014:
000135 c005      	RJMP _0x2020015
                 _0x2020010:
000136 01d9      	MOVW R26,R18
000137 efef      	LDI  R30,LOW(65535)
000138 efff      	LDI  R31,HIGH(65535)
000139 93ed      	ST   X+,R30
00013a 93fc      	ST   X,R31
                 _0x2020015:
00013b 940e 03b4 	CALL __LOADLOCR6
00013d 9627      	ADIW R28,7
00013e 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00013f 93ba      	ST   -Y,R27
000140 93aa      	ST   -Y,R26
000141 9726      	SBIW R28,6
000142 940e 03ad 	CALL __SAVELOCR6
000144 e010      	LDI  R17,0
000145 85ac      	LDD  R26,Y+12
000146 85bd      	LDD  R27,Y+12+1
000147 e0e0      	LDI  R30,LOW(0)
000148 e0f0      	LDI  R31,HIGH(0)
000149 93ed      	ST   X+,R30
00014a 93fc      	ST   X,R31
                 _0x2020016:
00014b 89ea      	LDD  R30,Y+18
00014c 89fb      	LDD  R31,Y+18+1
00014d 9631      	ADIW R30,1
00014e 8bea      	STD  Y+18,R30
00014f 8bfb      	STD  Y+18+1,R31
000150 9731      	SBIW R30,1
000151 91e4      	LPM  R30,Z
000152 2f2e      	MOV  R18,R30
000153 30e0      	CPI  R30,0
000154 f409      	BRNE PC+2
000155 c11d      	RJMP _0x2020018
000156 2fe1      	MOV  R30,R17
000157 30e0      	CPI  R30,0
000158 f439      	BRNE _0x202001C
000159 3225      	CPI  R18,37
00015a f411      	BRNE _0x202001D
00015b e011      	LDI  R17,LOW(1)
00015c c002      	RJMP _0x202001E
                 _0x202001D:
00015d 940e 0382 	CALL SUBOPT_0x4
                 _0x202001E:
00015f c112      	RJMP _0x202001B
                 _0x202001C:
000160 30e1      	CPI  R30,LOW(0x1)
000161 f4a9      	BRNE _0x202001F
000162 3225      	CPI  R18,37
000163 f419      	BRNE _0x2020020
000164 940e 0382 	CALL SUBOPT_0x4
000166 c10a      	RJMP _0x20200CC
                 _0x2020020:
000167 e012      	LDI  R17,LOW(2)
000168 e040      	LDI  R20,LOW(0)
000169 e000      	LDI  R16,LOW(0)
00016a 322d      	CPI  R18,45
00016b f411      	BRNE _0x2020021
00016c e001      	LDI  R16,LOW(1)
00016d c104      	RJMP _0x202001B
                 _0x2020021:
00016e 322b      	CPI  R18,43
00016f f411      	BRNE _0x2020022
000170 e24b      	LDI  R20,LOW(43)
000171 c100      	RJMP _0x202001B
                 _0x2020022:
000172 3220      	CPI  R18,32
000173 f411      	BRNE _0x2020023
000174 e240      	LDI  R20,LOW(32)
000175 c0fc      	RJMP _0x202001B
                 _0x2020023:
000176 c002      	RJMP _0x2020024
                 _0x202001F:
000177 30e2      	CPI  R30,LOW(0x2)
000178 f439      	BRNE _0x2020025
                 _0x2020024:
000179 e050      	LDI  R21,LOW(0)
00017a e013      	LDI  R17,LOW(3)
00017b 3320      	CPI  R18,48
00017c f411      	BRNE _0x2020026
00017d 6800      	ORI  R16,LOW(128)
00017e c0f3      	RJMP _0x202001B
                 _0x2020026:
00017f c003      	RJMP _0x2020027
                 _0x2020025:
000180 30e3      	CPI  R30,LOW(0x3)
000181 f009      	BREQ PC+2
000182 c0ef      	RJMP _0x202001B
                 _0x2020027:
000183 3320      	CPI  R18,48
000184 f010      	BRLO _0x202002A
000185 332a      	CPI  R18,58
000186 f008      	BRLO _0x202002B
                 _0x202002A:
000187 c007      	RJMP _0x2020029
                 _0x202002B:
000188 e0aa      	LDI  R26,LOW(10)
000189 9f5a      	MUL  R21,R26
00018a 2d50      	MOV  R21,R0
00018b 2fe2      	MOV  R30,R18
00018c 53e0      	SUBI R30,LOW(48)
00018d 0f5e      	ADD  R21,R30
00018e c0e3      	RJMP _0x202001B
                 _0x2020029:
00018f 2fe2      	MOV  R30,R18
000190 36e3      	CPI  R30,LOW(0x63)
000191 f449      	BRNE _0x202002F
000192 940e 0389 	CALL SUBOPT_0x5
000194 89e8      	LDD  R30,Y+16
000195 89f9      	LDD  R31,Y+16+1
000196 81a4      	LDD  R26,Z+4
000197 93aa      	ST   -Y,R26
000198 940e 038f 	CALL SUBOPT_0x6
00019a c0d6      	RJMP _0x2020030
                 _0x202002F:
00019b 37e3      	CPI  R30,LOW(0x73)
00019c f441      	BRNE _0x2020032
00019d 940e 0389 	CALL SUBOPT_0x5
00019f 940e 0395 	CALL SUBOPT_0x7
0001a1 940e 0345 	CALL _strlen
0001a3 2f1e      	MOV  R17,R30
0001a4 c00a      	RJMP _0x2020033
                 _0x2020032:
0001a5 37e0      	CPI  R30,LOW(0x70)
0001a6 f461      	BRNE _0x2020035
0001a7 940e 0389 	CALL SUBOPT_0x5
0001a9 940e 0395 	CALL SUBOPT_0x7
0001ab 940e 0351 	CALL _strlenf
0001ad 2f1e      	MOV  R17,R30
0001ae 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001af 6002      	ORI  R16,LOW(2)
0001b0 770f      	ANDI R16,LOW(127)
0001b1 e030      	LDI  R19,LOW(0)
0001b2 c03c      	RJMP _0x2020036
                 _0x2020035:
0001b3 36e4      	CPI  R30,LOW(0x64)
0001b4 f011      	BREQ _0x2020039
0001b5 36e9      	CPI  R30,LOW(0x69)
0001b6 f411      	BRNE _0x202003A
                 _0x2020039:
0001b7 6004      	ORI  R16,LOW(4)
0001b8 c002      	RJMP _0x202003B
                 _0x202003A:
0001b9 37e5      	CPI  R30,LOW(0x75)
0001ba f431      	BRNE _0x202003C
                 _0x202003B:
0001bb e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001bc e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001bd 83ee      	STD  Y+6,R30
0001be 83ff      	STD  Y+6+1,R31
0001bf e015      	LDI  R17,LOW(5)
0001c0 c00c      	RJMP _0x202003D
                 _0x202003C:
0001c1 35e8      	CPI  R30,LOW(0x58)
0001c2 f411      	BRNE _0x202003F
0001c3 6008      	ORI  R16,LOW(8)
0001c4 c003      	RJMP _0x2020040
                 _0x202003F:
0001c5 37e8      	CPI  R30,LOW(0x78)
0001c6 f009      	BREQ PC+2
0001c7 c0a9      	RJMP _0x2020071
                 _0x2020040:
0001c8 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0001c9 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0001ca 83ee      	STD  Y+6,R30
0001cb 83ff      	STD  Y+6+1,R31
0001cc e014      	LDI  R17,LOW(4)
                 _0x202003D:
0001cd ff02      	SBRS R16,2
0001ce c017      	RJMP _0x2020042
0001cf 940e 0389 	CALL SUBOPT_0x5
0001d1 89a8      	LDD  R26,Y+16
0001d2 89b9      	LDD  R27,Y+16+1
0001d3 9614      	ADIW R26,4
0001d4 91ed      	LD   R30,X+
0001d5 91fd      	LD   R31,X+
0001d6 87ea      	STD  Y+10,R30
0001d7 87fb      	STD  Y+10+1,R31
0001d8 85ab      	LDD  R26,Y+11
0001d9 23aa      	TST  R26
0001da f42a      	BRPL _0x2020043
0001db 940e 03c3 	CALL __ANEGW1
0001dd 87ea      	STD  Y+10,R30
0001de 87fb      	STD  Y+10+1,R31
0001df e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0001e0 3040      	CPI  R20,0
0001e1 f011      	BREQ _0x2020044
0001e2 5f1f      	SUBI R17,-LOW(1)
0001e3 c001      	RJMP _0x2020045
                 _0x2020044:
0001e4 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0001e5 c009      	RJMP _0x2020046
                 _0x2020042:
0001e6 940e 0389 	CALL SUBOPT_0x5
0001e8 89a8      	LDD  R26,Y+16
0001e9 89b9      	LDD  R27,Y+16+1
0001ea 9614      	ADIW R26,4
0001eb 940e 0410 	CALL __GETW1P
0001ed 87ea      	STD  Y+10,R30
0001ee 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
0001ef fd00      	SBRC R16,0
0001f0 c011      	RJMP _0x2020047
                 _0x2020048:
0001f1 1715      	CP   R17,R21
0001f2 f478      	BRSH _0x202004A
0001f3 ff07      	SBRS R16,7
0001f4 c008      	RJMP _0x202004B
0001f5 ff02      	SBRS R16,2
0001f6 c004      	RJMP _0x202004C
0001f7 7f0b      	ANDI R16,LOW(251)
0001f8 2f24      	MOV  R18,R20
0001f9 5011      	SUBI R17,LOW(1)
0001fa c001      	RJMP _0x202004D
                 _0x202004C:
0001fb e320      	LDI  R18,LOW(48)
                 _0x202004D:
0001fc c001      	RJMP _0x202004E
                 _0x202004B:
0001fd e220      	LDI  R18,LOW(32)
                 _0x202004E:
0001fe 940e 0382 	CALL SUBOPT_0x4
000200 5051      	SUBI R21,LOW(1)
000201 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000202 2f31      	MOV  R19,R17
000203 ff01      	SBRS R16,1
000204 c017      	RJMP _0x202004F
                 _0x2020050:
000205 3030      	CPI  R19,0
000206 f0a1      	BREQ _0x2020052
000207 ff03      	SBRS R16,3
000208 c006      	RJMP _0x2020053
000209 81ee      	LDD  R30,Y+6
00020a 81ff      	LDD  R31,Y+6+1
00020b 9125      	LPM  R18,Z+
00020c 83ee      	STD  Y+6,R30
00020d 83ff      	STD  Y+6+1,R31
00020e c005      	RJMP _0x2020054
                 _0x2020053:
00020f 81ae      	LDD  R26,Y+6
000210 81bf      	LDD  R27,Y+6+1
000211 912d      	LD   R18,X+
000212 83ae      	STD  Y+6,R26
000213 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000214 940e 0382 	CALL SUBOPT_0x4
000216 3050      	CPI  R21,0
000217 f009      	BREQ _0x2020055
000218 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000219 5031      	SUBI R19,LOW(1)
00021a cfea      	RJMP _0x2020050
                 _0x2020052:
00021b c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00021c e320      	LDI  R18,LOW(48)
00021d 81ee      	LDD  R30,Y+6
00021e 81ff      	LDD  R31,Y+6+1
00021f 940e 0414 	CALL __GETW1PF
000221 87e8      	STD  Y+8,R30
000222 87f9      	STD  Y+8+1,R31
000223 81ee      	LDD  R30,Y+6
000224 81ff      	LDD  R31,Y+6+1
000225 9632      	ADIW R30,2
000226 83ee      	STD  Y+6,R30
000227 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000228 85e8      	LDD  R30,Y+8
000229 85f9      	LDD  R31,Y+8+1
00022a 85aa      	LDD  R26,Y+10
00022b 85bb      	LDD  R27,Y+10+1
00022c 17ae      	CP   R26,R30
00022d 07bf      	CPC  R27,R31
00022e f050      	BRLO _0x202005C
00022f 5f2f      	SUBI R18,-LOW(1)
000230 85a8      	LDD  R26,Y+8
000231 85b9      	LDD  R27,Y+8+1
000232 85ea      	LDD  R30,Y+10
000233 85fb      	LDD  R31,Y+10+1
000234 1bea      	SUB  R30,R26
000235 0bfb      	SBC  R31,R27
000236 87ea      	STD  Y+10,R30
000237 87fb      	STD  Y+10+1,R31
000238 cfef      	RJMP _0x202005A
                 _0x202005C:
000239 332a      	CPI  R18,58
00023a f028      	BRLO _0x202005D
00023b ff03      	SBRS R16,3
00023c c002      	RJMP _0x202005E
00023d 5f29      	SUBI R18,-LOW(7)
00023e c001      	RJMP _0x202005F
                 _0x202005E:
00023f 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000240 fd04      	SBRC R16,4
000241 c01a      	RJMP _0x2020061
000242 3321      	CPI  R18,49
000243 f420      	BRSH _0x2020063
000244 85a8      	LDD  R26,Y+8
000245 85b9      	LDD  R27,Y+8+1
000246 9711      	SBIW R26,1
000247 f409      	BRNE _0x2020062
                 _0x2020063:
000248 c009      	RJMP _0x20200CD
                 _0x2020062:
000249 1753      	CP   R21,R19
00024a f010      	BRLO _0x2020067
00024b ff00      	SBRS R16,0
00024c c001      	RJMP _0x2020068
                 _0x2020067:
00024d c013      	RJMP _0x2020066
                 _0x2020068:
00024e e220      	LDI  R18,LOW(32)
00024f ff07      	SBRS R16,7
000250 c00b      	RJMP _0x2020069
000251 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000252 6100      	ORI  R16,LOW(16)
000253 ff02      	SBRS R16,2
000254 c007      	RJMP _0x202006A
000255 7f0b      	ANDI R16,LOW(251)
000256 934a      	ST   -Y,R20
000257 940e 038f 	CALL SUBOPT_0x6
000259 3050      	CPI  R21,0
00025a f009      	BREQ _0x202006B
00025b 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
00025c 940e 0382 	CALL SUBOPT_0x4
00025e 3050      	CPI  R21,0
00025f f009      	BREQ _0x202006C
000260 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000261 5031      	SUBI R19,LOW(1)
000262 85a8      	LDD  R26,Y+8
000263 85b9      	LDD  R27,Y+8+1
000264 9712      	SBIW R26,2
000265 f008      	BRLO _0x2020059
000266 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000267 ff00      	SBRS R16,0
000268 c008      	RJMP _0x202006D
                 _0x202006E:
000269 3050      	CPI  R21,0
00026a f031      	BREQ _0x2020070
00026b 5051      	SUBI R21,LOW(1)
00026c e2e0      	LDI  R30,LOW(32)
00026d 93ea      	ST   -Y,R30
00026e 940e 038f 	CALL SUBOPT_0x6
000270 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000271 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000272 ced8      	RJMP _0x2020016
                 _0x2020018:
000273 85ac      	LDD  R26,Y+12
000274 85bd      	LDD  R27,Y+12+1
000275 91ed      	LD   R30,X+
000276 91fd      	LD   R31,X+
000277 940e 03b4 	CALL __LOADLOCR6
000279 9664      	ADIW R28,20
00027a 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00027b 92ff      	PUSH R15
00027c 2ef8      	MOV  R15,R24
00027d 9726      	SBIW R28,6
00027e 940e 03ad 	CALL __SAVELOCR6
000280 01fe      	MOVW R30,R28
000281 940e 03bb 	CALL __ADDW1R15
                +
000283 8546     +LDD R20 , Z + 14
000284 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
000285 2e04      	MOV  R0,R20
000286 2a05      	OR   R0,R21
000287 f419      	BRNE _0x2020072
000288 efef      	LDI  R30,LOW(65535)
000289 efff      	LDI  R31,HIGH(65535)
00028a c021      	RJMP _0x20C0002
                 _0x2020072:
00028b 01de      	MOVW R26,R28
00028c 9618      	ADIW R26,8
00028d 940e 03bf 	CALL __ADDW2R15
00028f 018d      	MOVW R16,R26
                +
000290 8748     +STD Y + 8 , R20
000291 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000292 e0e0      	LDI  R30,LOW(0)
000293 87ea      	STD  Y+10,R30
000294 87eb      	STD  Y+10+1,R30
000295 01de      	MOVW R26,R28
000296 961c      	ADIW R26,12
000297 940e 03bf 	CALL __ADDW2R15
000299 91ed      	LD   R30,X+
00029a 91fd      	LD   R31,X+
00029b 93fa      	ST   -Y,R31
00029c 93ea      	ST   -Y,R30
00029d 931a      	ST   -Y,R17
00029e 930a      	ST   -Y,R16
00029f e0e7      	LDI  R30,LOW(_put_buff_G101)
0002a0 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002a1 93fa      	ST   -Y,R31
0002a2 93ea      	ST   -Y,R30
0002a3 01de      	MOVW R26,R28
0002a4 961c      	ADIW R26,12
0002a5 de99      	RCALL __print_G101
0002a6 019f      	MOVW R18,R30
0002a7 85a8      	LDD  R26,Y+8
0002a8 85b9      	LDD  R27,Y+8+1
0002a9 e0e0      	LDI  R30,LOW(0)
0002aa 93ec      	ST   X,R30
0002ab 01f9      	MOVW R30,R18
                 _0x20C0002:
0002ac 940e 03b4 	CALL __LOADLOCR6
0002ae 962c      	ADIW R28,12
0002af 90ff      	POP  R15
0002b0 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
0002b1 931a      	ST   -Y,R17
0002b2 2f1a      	MOV  R17,R26
0002b3 b3e5      	IN   R30,0x15
0002b4 70ef      	ANDI R30,LOW(0xF)
0002b5 2fae      	MOV  R26,R30
0002b6 2fe1      	MOV  R30,R17
0002b7 7fe0      	ANDI R30,LOW(0xF0)
0002b8 2bea      	OR   R30,R26
0002b9 bbe5      	OUT  0x15,R30
                +
0002ba e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
0002bb 958a     +DEC R24
0002bc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
0002bd 9aaa      	SBI  0x15,2
                +
0002be e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
0002bf 958a     +DEC R24
0002c0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
0002c1 98aa      	CBI  0x15,2
                +
0002c2 e184     +LDI R24 , LOW ( 20 )
                +__DELAY_USB_LOOP :
0002c3 958a     +DEC R24
0002c4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 20
0002c5 c07d      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002c6 93aa      	ST   -Y,R26
0002c7 81a8      	LD   R26,Y
0002c8 dfe8      	RCALL __lcd_write_nibble_G102
0002c9 81e8          ld    r30,y
0002ca 95e2          swap  r30
0002cb 83e8          st    y,r30
0002cc 81a8      	LD   R26,Y
0002cd dfe3      	RCALL __lcd_write_nibble_G102
                +
0002ce ec88     +LDI R24 , LOW ( 200 )
                +__DELAY_USB_LOOP :
0002cf 958a     +DEC R24
0002d0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 200
0002d1 9621      	ADIW R28,1
0002d2 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0002d3 931a      	ST   -Y,R17
0002d4 930a      	ST   -Y,R16
0002d5 2f1a      	MOV  R17,R26
0002d6 810a      	LDD  R16,Y+2
0002d7 2fe1      	MOV  R30,R17
0002d8 e0f0      	LDI  R31,0
0002d9 57ec      	SUBI R30,LOW(-__base_y_G102)
0002da 4ffd      	SBCI R31,HIGH(-__base_y_G102)
0002db 81e0      	LD   R30,Z
0002dc 0fe0      	ADD  R30,R16
0002dd 2fae      	MOV  R26,R30
0002de dfe7      	RCALL __lcd_write_data
0002df 2e50      	MOV  R5,R16
0002e0 2e41      	MOV  R4,R17
0002e1 8119      	LDD  R17,Y+1
0002e2 8108      	LDD  R16,Y+0
0002e3 9623      	ADIW R28,3
0002e4 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002e5 e0a2      	LDI  R26,LOW(2)
0002e6 940e 039f 	CALL SUBOPT_0x8
0002e8 e0ac      	LDI  R26,LOW(12)
0002e9 dfdc      	RCALL __lcd_write_data
0002ea e0a1      	LDI  R26,LOW(1)
0002eb 940e 039f 	CALL SUBOPT_0x8
0002ed e0e0      	LDI  R30,LOW(0)
0002ee 2e4e      	MOV  R4,R30
0002ef 2e5e      	MOV  R5,R30
0002f0 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002f1 931a      	ST   -Y,R17
0002f2 2f1a      	MOV  R17,R26
0002f3 301a      	CPI  R17,10
0002f4 f011      	BREQ _0x2040005
0002f5 1457      	CP   R5,R7
0002f6 f040      	BRLO _0x2040004
                 _0x2040005:
0002f7 e0e0      	LDI  R30,LOW(0)
0002f8 93ea      	ST   -Y,R30
0002f9 9443      	INC  R4
0002fa 2da4      	MOV  R26,R4
0002fb dfd7      	RCALL _lcd_gotoxy
0002fc 301a      	CPI  R17,10
0002fd f409      	BRNE _0x2040007
0002fe c044      	RJMP _0x20C0001
                 _0x2040007:
                 _0x2040004:
0002ff 9453      	INC  R5
000300 9aa8      	SBI  0x15,0
000301 2fa1      	MOV  R26,R17
000302 dfc3      	RCALL __lcd_write_data
000303 98a8      	CBI  0x15,0
000304 c03e      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000305 940e 03af 	CALL __SAVELOCR4
000307 019d      	MOVW R18,R26
                 _0x2040008:
000308 01d9      	MOVW R26,R18
                +
000309 5f2f     +SUBI R18 , LOW ( - 1 )
00030a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00030b 91ec      	LD   R30,X
00030c 2f1e      	MOV  R17,R30
00030d 30e0      	CPI  R30,0
00030e f019      	BREQ _0x204000A
00030f 2fa1      	MOV  R26,R17
000310 dfe0      	RCALL _lcd_putchar
000311 cff6      	RJMP _0x2040008
                 _0x204000A:
000312 940e 03b6 	CALL __LOADLOCR4
000314 9624      	ADIW R28,4
000315 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000316 931a      	ST   -Y,R17
000317 2f1a      	MOV  R17,R26
000318 b3e4      	IN   R30,0x14
000319 6fe0      	ORI  R30,LOW(0xF0)
00031a bbe4      	OUT  0x14,R30
00031b 9aa2      	SBI  0x14,2
00031c 9aa0      	SBI  0x14,0
00031d 9aa1      	SBI  0x14,1
00031e 98aa      	CBI  0x15,2
00031f 98a8      	CBI  0x15,0
000320 98a9      	CBI  0x15,1
000321 2e71      	MOV  R7,R17
000322 2fe1      	MOV  R30,R17
000323 58e0      	SUBI R30,-LOW(128)
                +
000324 93e0 0286+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
000326 2fe1      	MOV  R30,R17
000327 54e0      	SUBI R30,-LOW(192)
                +
000328 93e0 0287+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
00032a e1a4      	LDI  R26,LOW(20)
00032b e0b0      	LDI  R27,0
00032c 940e 041d 	CALL _delay_ms
00032e 940e 03a5 	CALL SUBOPT_0x9
000330 940e 03a5 	CALL SUBOPT_0x9
000332 940e 03a5 	CALL SUBOPT_0x9
000334 e2a0      	LDI  R26,LOW(32)
000335 df7b      	RCALL __lcd_write_nibble_G102
                +
000336 e28c     +LDI R24 , LOW ( 300 )
000337 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
000338 9701     +SBIW R24 , 1
000339 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
00033a e2a8      	LDI  R26,LOW(40)
00033b df8a      	RCALL __lcd_write_data
00033c e0a4      	LDI  R26,LOW(4)
00033d df88      	RCALL __lcd_write_data
00033e e8a5      	LDI  R26,LOW(133)
00033f df86      	RCALL __lcd_write_data
000340 e0a6      	LDI  R26,LOW(6)
000341 df84      	RCALL __lcd_write_data
000342 dfa2      	RCALL _lcd_clear
                 _0x20C0001:
000343 9119      	LD   R17,Y+
000344 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000345 93ba      	ST   -Y,R27
000346 93aa      	ST   -Y,R26
000347 91a9          ld   r26,y+
000348 91b9          ld   r27,y+
000349 27ee          clr  r30
00034a 27ff          clr  r31
                 strlen0:
00034b 916d          ld   r22,x+
00034c 2366          tst  r22
00034d f011          breq strlen1
00034e 9631          adiw r30,1
00034f cffb          rjmp strlen0
                 strlen1:
000350 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000351 93ba      	ST   -Y,R27
000352 93aa      	ST   -Y,R26
000353 27aa          clr  r26
000354 27bb          clr  r27
000355 91e9          ld   r30,y+
000356 91f9          ld   r31,y+
                 strlenf0:
000357 9005      	lpm  r0,z+
000358 2000          tst  r0
000359 f011          breq strlenf1
00035a 9611          adiw r26,1
00035b cffb          rjmp strlenf0
                 strlenf1:
00035c 01fd          movw r30,r26
00035d 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _dataADC:
000260           	.BYTE 0x20
                 __seed_G100:
000280           	.BYTE 0x4
                 __base_y_G102:
000284           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
00035e 940e 0084 	CALL _read_adc
000360 2766      	CLR  R22
000361 2777      	CLR  R23
000362 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1:
000363 940e 03cc 	CALL __MULD12U
000365 01df      	MOVW R26,R30
000366 01cb      	MOVW R24,R22
                +
000367 efef     +LDI R30 , LOW ( 0x3FF )
000368 e0f3     +LDI R31 , HIGH ( 0x3FF )
000369 e060     +LDI R22 , BYTE3 ( 0x3FF )
00036a e070     +LDI R23 , BYTE4 ( 0x3FF )
                 	__GETD1N 0x3FF
00036b 940e 03ec 	CALL __DIVD21U
00036d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
00036e e6e0      	LDI  R30,LOW(_dataADC)
00036f e0f2      	LDI  R31,HIGH(_dataADC)
000370 93fa      	ST   -Y,R31
000371 93ea      	ST   -Y,R30
000372 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
000373 940e 03c7 	CALL __CWD1
000375 940e 0418 	CALL __PUTPARD1
000377 e084      	LDI  R24,4
000378 940e 027b 	CALL _sprintf
00037a 9628      	ADIW R28,8
00037b e6a0      	LDI  R26,LOW(_dataADC)
00037c e0b2      	LDI  R27,HIGH(_dataADC)
00037d 940e 0305 	CALL _lcd_puts
00037f e0e0      	LDI  R30,LOW(0)
000380 93ea      	ST   -Y,R30
000381 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
000382 932a      	ST   -Y,R18
000383 85ad      	LDD  R26,Y+13
000384 85be      	LDD  R27,Y+13+1
000385 85ef      	LDD  R30,Y+15
000386 89f8      	LDD  R31,Y+15+1
000387 9509      	ICALL
000388 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000389 89e8      	LDD  R30,Y+16
00038a 89f9      	LDD  R31,Y+16+1
00038b 9734      	SBIW R30,4
00038c 8be8      	STD  Y+16,R30
00038d 8bf9      	STD  Y+16+1,R31
00038e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00038f 85ad      	LDD  R26,Y+13
000390 85be      	LDD  R27,Y+13+1
000391 85ef      	LDD  R30,Y+15
000392 89f8      	LDD  R31,Y+15+1
000393 9509      	ICALL
000394 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000395 89a8      	LDD  R26,Y+16
000396 89b9      	LDD  R27,Y+16+1
000397 9614      	ADIW R26,4
000398 91ed      	LD   R30,X+
000399 91fd      	LD   R31,X+
00039a 83ee      	STD  Y+6,R30
00039b 83ff      	STD  Y+6+1,R31
00039c 81ae      	LDD  R26,Y+6
00039d 81bf      	LDD  R27,Y+6+1
00039e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00039f 940e 02c6 	CALL __lcd_write_data
0003a1 e0a3      	LDI  R26,LOW(3)
0003a2 e0b0      	LDI  R27,0
0003a3 940c 041d 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
0003a5 e3a0      	LDI  R26,LOW(48)
0003a6 940e 02b1 	CALL __lcd_write_nibble_G102
                +
0003a8 e28c     +LDI R24 , LOW ( 300 )
0003a9 e091     +LDI R25 , HIGH ( 300 )
                +__DELAY_USW_LOOP :
0003aa 9701     +SBIW R24 , 1
0003ab f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 300
0003ac 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003ad 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003ae 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003af 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003b0 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003b1 931a      	ST   -Y,R17
0003b2 930a      	ST   -Y,R16
0003b3 9508      	RET
                 
                 __LOADLOCR6:
0003b4 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003b5 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003b6 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003b7 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003b8 8119      	LDD  R17,Y+1
0003b9 8108      	LD   R16,Y
0003ba 9508      	RET
                 
                 __ADDW1R15:
0003bb 2400      	CLR  R0
0003bc 0def      	ADD  R30,R15
0003bd 1df0      	ADC  R31,R0
0003be 9508      	RET
                 
                 __ADDW2R15:
0003bf 2400      	CLR  R0
0003c0 0daf      	ADD  R26,R15
0003c1 1db0      	ADC  R27,R0
0003c2 9508      	RET
                 
                 __ANEGW1:
0003c3 95f1      	NEG  R31
0003c4 95e1      	NEG  R30
0003c5 40f0      	SBCI R31,0
0003c6 9508      	RET
                 
                 __CWD1:
0003c7 2f6f      	MOV  R22,R31
0003c8 0f66      	ADD  R22,R22
0003c9 0b66      	SBC  R22,R22
0003ca 2f76      	MOV  R23,R22
0003cb 9508      	RET
                 
                 __MULD12U:
0003cc 9f7a      	MUL  R23,R26
0003cd 2d70      	MOV  R23,R0
0003ce 9f6b      	MUL  R22,R27
0003cf 0d70      	ADD  R23,R0
0003d0 9ff8      	MUL  R31,R24
0003d1 0d70      	ADD  R23,R0
0003d2 9fe9      	MUL  R30,R25
0003d3 0d70      	ADD  R23,R0
0003d4 9f6a      	MUL  R22,R26
0003d5 2d60      	MOV  R22,R0
0003d6 0d71      	ADD  R23,R1
0003d7 9ffb      	MUL  R31,R27
0003d8 0d60      	ADD  R22,R0
0003d9 1d71      	ADC  R23,R1
0003da 9fe8      	MUL  R30,R24
0003db 0d60      	ADD  R22,R0
0003dc 1d71      	ADC  R23,R1
0003dd 2788      	CLR  R24
0003de 9ffa      	MUL  R31,R26
0003df 2df0      	MOV  R31,R0
0003e0 0d61      	ADD  R22,R1
0003e1 1f78      	ADC  R23,R24
0003e2 9feb      	MUL  R30,R27
0003e3 0df0      	ADD  R31,R0
0003e4 1d61      	ADC  R22,R1
0003e5 1f78      	ADC  R23,R24
0003e6 9fea      	MUL  R30,R26
0003e7 2de0      	MOV  R30,R0
0003e8 0df1      	ADD  R31,R1
0003e9 1f68      	ADC  R22,R24
0003ea 1f78      	ADC  R23,R24
0003eb 9508      	RET
                 
                 __DIVD21U:
0003ec 933f      	PUSH R19
0003ed 934f      	PUSH R20
0003ee 935f      	PUSH R21
0003ef 2400      	CLR  R0
0003f0 2411      	CLR  R1
0003f1 01a0      	MOVW R20,R0
0003f2 e230      	LDI  R19,32
                 __DIVD21U1:
0003f3 0faa      	LSL  R26
0003f4 1fbb      	ROL  R27
0003f5 1f88      	ROL  R24
0003f6 1f99      	ROL  R25
0003f7 1c00      	ROL  R0
0003f8 1c11      	ROL  R1
0003f9 1f44      	ROL  R20
0003fa 1f55      	ROL  R21
0003fb 1a0e      	SUB  R0,R30
0003fc 0a1f      	SBC  R1,R31
0003fd 0b46      	SBC  R20,R22
0003fe 0b57      	SBC  R21,R23
0003ff f428      	BRCC __DIVD21U2
000400 0e0e      	ADD  R0,R30
000401 1e1f      	ADC  R1,R31
000402 1f46      	ADC  R20,R22
000403 1f57      	ADC  R21,R23
000404 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000405 60a1      	SBR  R26,1
                 __DIVD21U3:
000406 953a      	DEC  R19
000407 f759      	BRNE __DIVD21U1
000408 01fd      	MOVW R30,R26
000409 01bc      	MOVW R22,R24
00040a 01d0      	MOVW R26,R0
00040b 01ca      	MOVW R24,R20
00040c 915f      	POP  R21
00040d 914f      	POP  R20
00040e 913f      	POP  R19
00040f 9508      	RET
                 
                 __GETW1P:
000410 91ed      	LD   R30,X+
000411 91fc      	LD   R31,X
000412 9711      	SBIW R26,1
000413 9508      	RET
                 
                 __GETW1PF:
000414 9005      	LPM  R0,Z+
000415 91f4      	LPM  R31,Z
000416 2de0      	MOV  R30,R0
000417 9508      	RET
                 
                 __PUTPARD1:
000418 937a      	ST   -Y,R23
000419 936a      	ST   -Y,R22
00041a 93fa      	ST   -Y,R31
00041b 93ea      	ST   -Y,R30
00041c 9508      	RET
                 
                 _delay_ms:
00041d 9610      	adiw r26,0
00041e f039      	breq __delay_ms1
                 __delay_ms0:
00041f 95a8      	wdr
                +
000420 eb88     +LDI R24 , LOW ( 0xBB8 )
000421 e09b     +LDI R25 , HIGH ( 0xBB8 )
                +__DELAY_USW_LOOP :
000422 9701     +SBIW R24 , 1
000423 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xBB8
000424 9711      	sbiw r26,1
000425 f7c9      	brne __delay_ms0
                 __delay_ms1:
000426 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  31 r1 :  11 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  39 r17:  42 r18:  40 r19:  13 r20:  21 r21:  27 r22:  25 r23:  17 
r24:  41 r25:  11 r26: 111 r27:  38 r28:  16 r29:   1 r30: 182 r31:  80 
x  :  31 y  : 148 z  :  17 
Registers used: 25 out of 35 (71.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  12 add   :  15 
adiw  :  25 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  32 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  75 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   2 jmp   :  24 ld    :  27 ldd   :  63 ldi   : 127 
lds   :   0 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  39 movw  :  35 
mul   :  11 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   7 out   :  10 pop   :   4 push  :   4 rcall :  14 ret   :  31 
reti  :   0 rjmp  :  60 rol   :   7 ror   :   0 sbc   :   5 sbci  :   3 
sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  19 sbr   :   1 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  63 std   :  31 sts   :   2 sub   :   2 subi  :  17 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 57 out of 116 (49.1%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00084e   2036     90   2126   32768   6.5%
[.dseg] 0x000060 0x000288      0     40     40    2048   2.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
