;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 07/05/2025
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 12,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// Data segment angka 0-9 untuk 7-segment common cathode
;unsigned char number7seg[] = {
;    0x3F, // 0
;    0x06, // 1
;    0x5B, // 2
;    0x4F, // 3
;    0x66, // 4
;    0x6D, // 5
;    0x7D, // 6
;    0x07, // 7
;    0x7F, // 8
;    0x6F  // 9
;};

	.DSEG
;
;int status = 0;
;int _button = 0;
;int _reverse = 0;
;
;
;void number(int number){
; 0000 002D void number(int number){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002E     int satuan = number % 10;
; 0000 002F     int puluhan = number / 10;
; 0000 0030 
; 0000 0031     PORTC = number7seg[satuan];
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	number -> Y+4
;	satuan -> R16,R17
;	puluhan -> R18,R19
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0032     PORTA = number7seg[puluhan];
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0033 }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;
;void main(void)
; 0000 0036 {
;PCODE: $00000025 VOL: 0
; 0000 0037     int count = 0;
; 0000 0038 
; 0000 0039     DDRC = 0b01111111;
;	count -> R16,R17
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 003A     DDRA = 0b01111111;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003B     DDRD = 0b00000000;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 003C     PORTD = 0b00000111;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003D 
; 0000 003E 
; 0000 003F 
; 0000 0040     while (1)
;PCODE: $00000030 VOL: 0
; 0000 0041     {
; 0000 0042 
; 0000 0043         int button = !PIND.0;
; 0000 0044         int reverse = !PIND.1;
; 0000 0045         int reset = !PIND.2;
; 0000 0046 
; 0000 0047 
; 0000 0048         // on/off
; 0000 0049         if (button && !_button)
;PCODE: $00000031 VOL: 0
;	button -> Y+4
;	reverse -> Y+2
;	reset -> Y+0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 004A         {
; 0000 004B 
; 0000 004C             status = !status;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 004D             delay_ms(100);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 004E         }
; 0000 004F         _button = button;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0050 
; 0000 0051         // reset
; 0000 0052         if (reset){
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0053             count = 0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0054             delay_ms(100);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0055         }
; 0000 0056         _reverse = reverse;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0057 
; 0000 0058         //menampilkan angka pada 7 segment
; 0000 0059         if (status)
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005A         {
; 0000 005B             number(count);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 005C             if(_reverse){
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 005D                 count--;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 005E                 if(count < 0) count = 99;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 005F             } else {
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0060                 count++;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0061                 if(count > 99) count = 0;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0062             }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0063             delay_ms(1000);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0064         }
; 0000 0065     }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0066 }
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;
;
;
;
;
